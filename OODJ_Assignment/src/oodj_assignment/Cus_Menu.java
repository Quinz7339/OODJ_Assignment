/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oodj_assignment;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class Cus_Menu extends javax.swing.JFrame {
    JFrame errorMessage;
    DefaultListModel prodListModel = new DefaultListModel();
    DefaultListModel orderIDListModel = new DefaultListModel();
    ArrayList <OrderItem> orderItemList= new ArrayList<OrderItem>();
    Customer customer;
    /**
     * Creates new form Cus_Menu
     * @param user
     */
    public Cus_Menu(Customer user)
    {
        initComponents();
        this.customer = user;
        
    }
    public Cus_Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel6 = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        pnlCusMenu = new javax.swing.JPanel();
        pnlCusMain = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnlBrowseProduct = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstBrowseProduct = new javax.swing.JList<>();
        btnBrowseCoffee = new javax.swing.JButton();
        btnBrowseEquipments = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtSearchProduct = new javax.swing.JTextField();
        btnSearchProduct = new javax.swing.JButton();
        pnlViewAddProduct = new javax.swing.JPanel();
        lblProdName = new javax.swing.JLabel();
        lblProdPrice = new javax.swing.JLabel();
        btnAddOrderItem = new javax.swing.JButton();
        txtOrderItemQuan = new javax.swing.JTextField();
        btnDecreaseQuan = new javax.swing.JButton();
        btnAddQuan = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        lblStockStatus = new javax.swing.JLabel();
        lblQuan = new javax.swing.JLabel();
        btnBackToBrowse = new javax.swing.JButton();
        lblProdParam2 = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblProdType = new javax.swing.JLabel();
        lblProdParam3 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        lblParam1Header = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        lblParam2Header = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblParam3Header = new javax.swing.JLabel();
        lblProdParam1 = new javax.swing.JLabel();
        lblProdID = new javax.swing.JLabel();
        pnlViewProfile = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblProfUsername = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lblProfUserID = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtProfName = new javax.swing.JTextField();
        txtProfEmail = new javax.swing.JTextField();
        txtProfPhoneNo = new javax.swing.JTextField();
        btnEditProf = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtProfAddress = new javax.swing.JTextArea();
        btnEditProfBack = new javax.swing.JButton();
        txtProfPassword = new javax.swing.JPasswordField();
        txtProfCfmPwd = new javax.swing.JPasswordField();
        pnlEditOrder = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblOrderItemList = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        btnDeleteOrderItem = new javax.swing.JButton();
        btnCreateOrder = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        lblEditOrderGrandTotal = new javax.swing.JLabel();
        btnDeleteOrder = new javax.swing.JButton();
        pnlViewOrderSummary = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstOrder = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblOrderOrderItems = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        lblViewOrderGrandTotal = new javax.swing.JLabel();
        txtSearchOrder = new javax.swing.JTextField();
        btnSearchOrder = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        cmenuShop = new javax.swing.JMenu();
        cmenuBrowseProduct = new javax.swing.JMenuItem();
        cmenuOrder = new javax.swing.JMenu();
        cmenuEditOrder = new javax.swing.JMenuItem();
        cmenuViewOrder = new javax.swing.JMenuItem();
        cmenuProfile = new javax.swing.JMenu();
        cmenuViewProfile = new javax.swing.JMenuItem();
        cmenuHome = new javax.swing.JMenu();
        btnLogout = new javax.swing.JMenuItem();
        cmenuReturnHome = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlCusMenu.setBackground(new java.awt.Color(255, 204, 204));
        pnlCusMenu.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                pnlCusMenuComponentAdded(evt);
            }
        });
        pnlCusMenu.setLayout(new java.awt.CardLayout());

        pnlCusMain.setBackground(new java.awt.Color(255, 204, 204));
        pnlCusMain.setMaximumSize(new java.awt.Dimension(750, 616));
        pnlCusMain.setMinimumSize(new java.awt.Dimension(750, 616));
        pnlCusMain.setPreferredSize(new java.awt.Dimension(750, 616));

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Welcome to RMS coffee Specialist ");

        jLabel3.setBackground(new java.awt.Color(255, 204, 204));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oodj_assignment/diagrams/Tea.png"))); // NOI18N

        javax.swing.GroupLayout pnlCusMainLayout = new javax.swing.GroupLayout(pnlCusMain);
        pnlCusMain.setLayout(pnlCusMainLayout);
        pnlCusMainLayout.setHorizontalGroup(
            pnlCusMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusMainLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(pnlCusMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCusMainLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCusMainLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(245, 245, 245))))
        );
        pnlCusMainLayout.setVerticalGroup(
            pnlCusMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusMainLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );

        pnlCusMenu.add(pnlCusMain, "pnlCusMain");

        pnlBrowseProduct.setBackground(new java.awt.Color(102, 153, 255));
        pnlBrowseProduct.setMaximumSize(new java.awt.Dimension(750, 616));
        pnlBrowseProduct.setMinimumSize(new java.awt.Dimension(750, 616));

        lstBrowseProduct.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstBrowseProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstBrowseProductMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(lstBrowseProduct);

        btnBrowseCoffee.setText("Coffee");
        btnBrowseCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseCoffeeActionPerformed(evt);
            }
        });

        btnBrowseEquipments.setText("Equipments");
        btnBrowseEquipments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseEquipmentsActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Shop our product:");

        btnSearchProduct.setText("Search");
        btnSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBrowseProductLayout = new javax.swing.GroupLayout(pnlBrowseProduct);
        pnlBrowseProduct.setLayout(pnlBrowseProductLayout);
        pnlBrowseProductLayout.setHorizontalGroup(
            pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBrowseProductLayout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addGroup(pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSearchProduct)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBrowseProductLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(113, 113, 113))
                    .addGroup(pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBrowseCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBrowseEquipments, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(150, 150, 150))
        );
        pnlBrowseProductLayout.setVerticalGroup(
            pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBrowseProductLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addComponent(txtSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(btnBrowseCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowseEquipments, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        pnlCusMenu.add(pnlBrowseProduct, "pnlBrowseProduct");

        pnlViewAddProduct.setBackground(new java.awt.Color(255, 204, 153));
        pnlViewAddProduct.setForeground(new java.awt.Color(255, 204, 153));
        pnlViewAddProduct.setMaximumSize(new java.awt.Dimension(750, 616));
        pnlViewAddProduct.setMinimumSize(new java.awt.Dimension(750, 616));

        lblProdName.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblProdName.setForeground(new java.awt.Color(102, 102, 102));
        lblProdName.setText("name");

        lblProdPrice.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblProdPrice.setForeground(new java.awt.Color(51, 204, 0));
        lblProdPrice.setText("**price**");

        btnAddOrderItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAddOrderItem.setText("Add to Order");
        btnAddOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderItemActionPerformed(evt);
            }
        });

        txtOrderItemQuan.setText("1");

        btnDecreaseQuan.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnDecreaseQuan.setText("-");
        btnDecreaseQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecreaseQuanActionPerformed(evt);
            }
        });

        btnAddQuan.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnAddQuan.setText("+");
        btnAddQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQuanActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(0, 0, 0));
        jLabel47.setText("Product Description:");

        lblStockStatus.setForeground(new java.awt.Color(0, 0, 0));
        lblStockStatus.setText("In stock:");

        lblQuan.setForeground(new java.awt.Color(0, 0, 0));
        lblQuan.setText("int/ Out of stock!");

        btnBackToBrowse.setText("Back ");
        btnBackToBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToBrowseActionPerformed(evt);
            }
        });

        lblProdParam2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdParam2.setForeground(new java.awt.Color(0, 0, 0));
        lblProdParam2.setText("param2");

        lblWeight.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblWeight.setForeground(new java.awt.Color(0, 0, 0));
        lblWeight.setText("weight");

        lblProdType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdType.setForeground(new java.awt.Color(0, 0, 0));
        lblProdType.setText("type");

        lblProdParam3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdParam3.setForeground(new java.awt.Color(0, 0, 0));
        lblProdParam3.setText("param3");

        jLabel72.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(0, 0, 0));
        jLabel72.setText("Product ID:");

        lblParam1Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblParam1Header.setForeground(new java.awt.Color(0, 0, 0));
        lblParam1Header.setText("Param1:");

        jLabel70.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(0, 0, 0));
        jLabel70.setText("Weight:");

        lblParam2Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblParam2Header.setForeground(new java.awt.Color(0, 0, 0));
        lblParam2Header.setText("Param2:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Type:");

        lblParam3Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblParam3Header.setForeground(new java.awt.Color(0, 0, 0));
        lblParam3Header.setText("Param3:");

        lblProdParam1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdParam1.setForeground(new java.awt.Color(0, 0, 0));
        lblProdParam1.setText("param1");

        lblProdID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdID.setForeground(new java.awt.Color(0, 0, 0));
        lblProdID.setText("id");

        javax.swing.GroupLayout pnlViewAddProductLayout = new javax.swing.GroupLayout(pnlViewAddProduct);
        pnlViewAddProduct.setLayout(pnlViewAddProductLayout);
        pnlViewAddProductLayout.setHorizontalGroup(
            pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewAddProductLayout.createSequentialGroup()
                        .addComponent(lblProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStockStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuan)
                            .addComponent(btnAddOrderItem)
                            .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                                .addComponent(txtOrderItemQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDecreaseQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(lblProdName)
                            .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                                    .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblProdType, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblProdParam3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblProdParam2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblParam2Header, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblProdParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblParam1Header, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblParam3Header, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                                    .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(429, 429, 429))
                                .addComponent(lblProdID, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewAddProductLayout.createSequentialGroup()
                                    .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                                            .addComponent(jLabel70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(90, 90, 90))
                                        .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(339, 339, 339))))
                        .addGap(165, 165, 165))
                    .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                        .addComponent(btnBackToBrowse)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlViewAddProductLayout.setVerticalGroup(
            pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnBackToBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProdName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47)
                .addGap(18, 18, 18)
                .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(lblParam1Header))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProdID)
                    .addComponent(lblProdParam1))
                .addGap(37, 37, 37)
                .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lblParam3Header))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProdType)
                            .addComponent(lblProdParam3)))
                    .addGroup(pnlViewAddProductLayout.createSequentialGroup()
                        .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel70)
                            .addComponent(lblParam2Header))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeight)
                            .addComponent(lblProdParam2))
                        .addGap(105, 105, 105)))
                .addGap(18, 18, 18)
                .addComponent(lblStockStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuan)
                .addGap(18, 18, 18)
                .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrderItemQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDecreaseQuan)
                    .addComponent(btnAddQuan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlViewAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProdPrice))
                .addContainerGap())
        );

        pnlCusMenu.add(pnlViewAddProduct, "pnlViewAddProduct");

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        lblProfUsername.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lblProfUsername.setForeground(new java.awt.Color(0, 0, 0));
        lblProfUsername.setText("*username*");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("'s Profile");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("User ID:");

        lblProfUserID.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblProfUserID.setForeground(new java.awt.Color(0, 0, 0));
        lblProfUserID.setText("*userid*");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Email:");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Name:");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Phone no:");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Address:");

        btnEditProf.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        btnEditProf.setText("Edit");
        btnEditProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfActionPerformed(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(0, 0, 0));
        jLabel51.setText("Password:");

        jLabel52.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 0));
        jLabel52.setText("Confirm Password:");

        txtProfAddress.setColumns(20);
        txtProfAddress.setRows(5);
        jScrollPane1.setViewportView(txtProfAddress);

        btnEditProfBack.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        btnEditProfBack.setText("Back");
        btnEditProfBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfBackActionPerformed(evt);
            }
        });

        txtProfPassword.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtProfCfmPwd.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblProfUsername)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(lblProfUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtProfName, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtProfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtProfPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel51)
                            .addComponent(jLabel52))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProfCfmPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(499, 499, 499)
                .addComponent(btnEditProfBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btnEditProf)
                .addGap(50, 50, 50))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblProfUsername)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(lblProfUserID))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtProfName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel25))
                            .addComponent(txtProfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel27))
                            .addComponent(txtProfPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel30))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51)
                            .addComponent(txtProfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel52)
                        .addComponent(txtProfCfmPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditProf, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditProfBack, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout pnlViewProfileLayout = new javax.swing.GroupLayout(pnlViewProfile);
        pnlViewProfile.setLayout(pnlViewProfileLayout);
        pnlViewProfileLayout.setHorizontalGroup(
            pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlViewProfileLayout.setVerticalGroup(
            pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlCusMenu.add(pnlViewProfile, "pnlViewProfile");

        pnlEditOrder.setBackground(new java.awt.Color(255, 204, 153));

        tblOrderItemList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product name", "Quantity", "Price", "Shipping Fee", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblOrderItemList);
        if (tblOrderItemList.getColumnModel().getColumnCount() > 0) {
            tblOrderItemList.getColumnModel().getColumn(0).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(0).setPreferredWidth(350);
            tblOrderItemList.getColumnModel().getColumn(1).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblOrderItemList.getColumnModel().getColumn(2).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblOrderItemList.getColumnModel().getColumn(3).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblOrderItemList.getColumnModel().getColumn(4).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Items currently in cart:");

        btnDeleteOrderItem.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnDeleteOrderItem.setForeground(new java.awt.Color(204, 0, 0));
        btnDeleteOrderItem.setText("Delete Item");
        btnDeleteOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderItemActionPerformed(evt);
            }
        });

        btnCreateOrder.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnCreateOrder.setText("Create Order");
        btnCreateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateOrderActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Grand Total:");

        lblEditOrderGrandTotal.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblEditOrderGrandTotal.setForeground(new java.awt.Color(0, 153, 51));
        lblEditOrderGrandTotal.setText("RM0.00");

        btnDeleteOrder.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnDeleteOrder.setForeground(new java.awt.Color(204, 51, 0));
        btnDeleteOrder.setText("Delete Order");
        btnDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditOrderLayout = new javax.swing.GroupLayout(pnlEditOrder);
        pnlEditOrder.setLayout(pnlEditOrderLayout);
        pnlEditOrderLayout.setHorizontalGroup(
            pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditOrderLayout.createSequentialGroup()
                .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDeleteOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateOrder)
                    .addComponent(lblEditOrderGrandTotal)
                    .addComponent(jLabel37))
                .addGap(44, 44, 44))
        );
        pnlEditOrderLayout.setVerticalGroup(
            pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditOrderLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEditOrderGrandTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlCusMenu.add(pnlEditOrder, "pnlEditOrder");

        pnlViewOrderSummary.setBackground(new java.awt.Color(255, 204, 153));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Order List");

        lstOrder.setBackground(new java.awt.Color(204, 204, 204));
        lstOrder.setForeground(new java.awt.Color(0, 0, 0));
        lstOrder.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstOrderMouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(lstOrder);

        tblOrderOrderItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product name", "Quantity", "Price", "Shipping Fee", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblOrderOrderItems);
        if (tblOrderOrderItems.getColumnModel().getColumnCount() > 0) {
            tblOrderOrderItems.getColumnModel().getColumn(0).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(0).setPreferredWidth(300);
            tblOrderOrderItems.getColumnModel().getColumn(1).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblOrderOrderItems.getColumnModel().getColumn(2).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblOrderOrderItems.getColumnModel().getColumn(3).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblOrderOrderItems.getColumnModel().getColumn(4).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLabel19.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Grand Total:");

        lblViewOrderGrandTotal.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblViewOrderGrandTotal.setForeground(new java.awt.Color(51, 153, 0));
        lblViewOrderGrandTotal.setText("RM0.00");

        btnSearchOrder.setText("Search");
        btnSearchOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlViewOrderSummaryLayout = new javax.swing.GroupLayout(pnlViewOrderSummary);
        pnlViewOrderSummary.setLayout(pnlViewOrderSummaryLayout);
        pnlViewOrderSummaryLayout.setHorizontalGroup(
            pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                        .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                                .addGap(520, 520, 520)
                                .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(lblViewOrderGrandTotal)))
                            .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                                .addComponent(txtSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 22, Short.MAX_VALUE))))
        );
        pnlViewOrderSummaryLayout.setVerticalGroup(
            pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewOrderSummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addGap(31, 31, 31)
                .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchOrder))
                .addGap(18, 18, 18)
                .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblViewOrderGrandTotal)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        pnlCusMenu.add(pnlViewOrderSummary, "pnlViewOrderHist");

        jMenuBar1.setMaximumSize(new java.awt.Dimension(238, 40));
        jMenuBar1.setMinimumSize(new java.awt.Dimension(238, 40));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(238, 40));

        cmenuShop.setText("Shop");
        cmenuShop.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        cmenuBrowseProduct.setText("Browse Product");
        cmenuBrowseProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmenuBrowseProductActionPerformed(evt);
            }
        });
        cmenuShop.add(cmenuBrowseProduct);

        jMenuBar1.add(cmenuShop);

        cmenuOrder.setText("Order");
        cmenuOrder.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        cmenuEditOrder.setText("View/Edit Order");
        cmenuEditOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmenuEditOrderActionPerformed(evt);
            }
        });
        cmenuOrder.add(cmenuEditOrder);

        cmenuViewOrder.setText("View Order History");
        cmenuViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmenuViewOrderActionPerformed(evt);
            }
        });
        cmenuOrder.add(cmenuViewOrder);

        jMenuBar1.add(cmenuOrder);

        cmenuProfile.setText("Account");
        cmenuProfile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        cmenuViewProfile.setText("View Profile");
        cmenuViewProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmenuViewProfileActionPerformed(evt);
            }
        });
        cmenuProfile.add(cmenuViewProfile);

        jMenuBar1.add(cmenuProfile);

        cmenuHome.setText("Home");
        cmenuHome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        cmenuHome.add(btnLogout);

        cmenuReturnHome.setText("Return To Home");
        cmenuReturnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmenuReturnHomeActionPerformed(evt);
            }
        });
        cmenuHome.add(cmenuReturnHome);

        jMenuBar1.add(cmenuHome);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCusMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCusMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlCusMenuComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_pnlCusMenuComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlCusMenuComponentAdded

    private void cmenuBrowseProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmenuBrowseProductActionPerformed
        CardLayout card = (CardLayout)pnlCusMenu.getLayout();
        card.show(pnlCusMenu, "pnlBrowseProduct");
        Customer cus = new Customer();
        ArrayList<Product> prodList = new ArrayList(cus.browseProd());
        prodListModel.removeAllElements();
        lstBrowseProduct.setModel(prodListModel);
        for (Product prod:prodList)
        {
            if (prod.getClass() == Fragile.class)
            {
                Product fragProd = (Fragile) prod;
                prodListModel.addElement(fragProd.getProductName());
            }
            else if (prod.getClass() == nonFragile.class)
            {
                Product nonFragProd = (nonFragile) prod;
                prodListModel.addElement(nonFragProd.getProductName());
            }
        }
    }//GEN-LAST:event_cmenuBrowseProductActionPerformed

    private void cmenuReturnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmenuReturnHomeActionPerformed
        CardLayout card = (CardLayout)pnlCusMenu.getLayout();
        card.show(pnlCusMenu, "pnlCusMain");
    }//GEN-LAST:event_cmenuReturnHomeActionPerformed

    private void cmenuEditOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmenuEditOrderActionPerformed
        CardLayout card = (CardLayout)pnlCusMenu.getLayout();
        card.show(pnlCusMenu, "pnlEditOrder");
        txtOrderItemQuan.setText(Integer.toString(0));
        DefaultTableModel orderItemListModel = (DefaultTableModel) tblOrderItemList.getModel();
        
        // Get grand total for pending order
        Order order = new Order(customer.genOrderID(), orderItemList);
        lblEditOrderGrandTotal.setText(String.format("RM%.2f",order.getGrandTotal()));
        
        // clear order list table
        int rowsToRemove = orderItemListModel.getRowCount();
        //remove rows from the bottom one by one
        for (int i = rowsToRemove - 1; i >= 0; i--)
        {
            orderItemListModel.removeRow(i);
        }
        
        Object[] rowOrderItem = new Object[5];
        
        for (OrderItem orderItem:orderItemList)
        {
            rowOrderItem[0] = orderItem.getProductName();
            rowOrderItem[1] = orderItem.getBuyQuan();
            rowOrderItem[2] = orderItem.getProductPrice();
            rowOrderItem[3] = orderItem.getShippingFee();
            rowOrderItem[4] = orderItem.calcSubtotal();
            orderItemListModel.addRow(rowOrderItem);
            
        }
    }//GEN-LAST:event_cmenuEditOrderActionPerformed

    private void cmenuViewProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmenuViewProfileActionPerformed
        CardLayout card = (CardLayout)pnlCusMenu.getLayout();
        card.show(pnlCusMenu, "pnlViewProfile");
        btnEditProfBack.setVisible(false);
        btnEditProf.setText("Edit");
        txtProfName.setEditable(false);
        txtProfAddress.setEditable(false);
        txtProfEmail.setEditable(false);
        txtProfPhoneNo.setEditable(false);
        txtProfPassword.setEditable(false);
        txtProfCfmPwd.setEditable(false);
        txtProfPassword.setText("");
        txtProfCfmPwd.setText("");
        lblProfUserID.setText(customer.getUID());
        lblProfUsername.setText(customer.getUsername());
        txtProfName.setText(customer.getName());
        txtProfAddress.setText(customer.getAddress());
        txtProfEmail.setText(customer.getEmailAddress());
        txtProfPhoneNo.setText(customer.getPhoneNumber());
    }//GEN-LAST:event_cmenuViewProfileActionPerformed

    private void cmenuViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmenuViewOrderActionPerformed
        CardLayout card = (CardLayout)pnlCusMenu.getLayout();
        card.show(pnlCusMenu, "pnlViewOrderHist");  
        
        // Show list of order IDs
        orderIDListModel.removeAllElements();
        try
        {
            ArrayList<Order> orderList = new ArrayList(customer.viewOrder(customer.getUID()));
            lstOrder.setModel(orderIDListModel);
            
            for (Object orders: orderList)
            {
                Order odr = (Order) orders;
                orderIDListModel.addElement(odr.getOrderID());
            }
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmenuViewOrderActionPerformed

    private void lstBrowseProductMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBrowseProductMouseReleased
        CardLayout card = (CardLayout)pnlCusMenu.getLayout();
        card.show(pnlCusMenu, "pnlViewAddProduct"); 
        Customer cus = new Customer();
        ArrayList<Object> prodList = new ArrayList(cus.browseProd());
        txtOrderItemQuan.setVisible(true);
        txtOrderItemQuan.setText("1");
        btnDecreaseQuan.setVisible(true);
        btnAddQuan.setVisible(true);
        btnAddOrderItem.setVisible(true);
        txtOrderItemQuan.setEditable(false);
        //for loop to enable object typecasting
        for (Object prod:prodList)
        {
            if (prod instanceof Fragile)
            {
                //typeccasting each Object into a fragile object
                Fragile fragProd = (Fragile) prod;
                if (lstBrowseProduct.getSelectedValue().equals(fragProd.getProductName()))
                {
                    if (fragProd.getProdQuantity() == 0)
                    {
                        lblQuan.setText("Out of Stock!");
                        txtOrderItemQuan.setVisible(false);
                        btnDecreaseQuan.setVisible(false);
                        btnAddQuan.setVisible(false);
                        btnAddOrderItem.setVisible(false);
                    }
                    else
                    {
                        lblQuan.setText(String.valueOf(fragProd.getProdQuantity()));
                        if (!orderItemList.isEmpty())
                        {
                            for (OrderItem orderItem : orderItemList)
                            {
                                if (orderItem.getProductName().equals(lstBrowseProduct.getSelectedValue()))
                                {
                                    lblQuan.setText(String.valueOf(fragProd.getProdQuantity() - orderItem.getBuyQuan()));
                                }
                            }
                        }
                    }
                    lblProdName.setText(String.valueOf(fragProd.getProductName()));
                    lblProdID.setText(String.valueOf(fragProd.getProductID()));
                    lblProdPrice.setText(String.format("RM%.2f",fragProd.getProductPrice()));
                    lblWeight.setText(String.valueOf(fragProd.getProductWeight()));
                    lblProdType.setText("Equipment (Fragile item)");
                    lblParam1Header.setText("Brand:");
                    lblProdParam1.setText(String.valueOf(fragProd.getBrand()));
                    lblParam2Header.setVisible(false);
                    lblProdParam2.setVisible(false);
                    lblParam3Header.setVisible(false);
                    lblProdParam3.setVisible(false);
                }
            }
            else
            {
                //typeccasting each Object into a nonFragile object
                nonFragile nonFragProd = (nonFragile) prod;
                if (lstBrowseProduct.getSelectedValue().equals(nonFragProd.getProductName()))
                {
                    if (nonFragProd.getProdQuantity() == 0)
                    {
                        lblQuan.setText("Out of Stock!");
                        txtOrderItemQuan.setVisible(false);
                        btnDecreaseQuan.setVisible(false);
                        btnAddQuan.setVisible(false);
                        btnAddOrderItem.setVisible(false);
                    }
                    else
                    {
                        lblQuan.setText(String.valueOf(nonFragProd.getProdQuantity()));
                        if (!orderItemList.isEmpty())
                        {
                            for (OrderItem orderItem : orderItemList)
                            {
                                if (orderItem.getProductName().equals(lstBrowseProduct.getSelectedValue()))
                                {
                                    lblQuan.setText(String.valueOf(nonFragProd.getProdQuantity() - orderItem.getBuyQuan()));
                                }
                            }
                        }
                    }
                    
                    lblParam2Header.setVisible(true);
                    lblProdParam2.setVisible(true);
                    lblParam3Header.setVisible(true);
                    lblProdParam3.setVisible(true);
                    lblProdName.setText(String.valueOf(nonFragProd.getProductName()));
                    lblProdName.setText(String.valueOf(nonFragProd.getProductName()));
                    lblProdID.setText(String.valueOf(nonFragProd.getProductID()));
                    lblProdPrice.setText(String.format("RM%.2f",nonFragProd.getProductPrice()));
                    lblWeight.setText(String.valueOf(nonFragProd.getProductWeight()));
                    lblProdType.setText("Coffee (Non-fragile item)");
                    lblParam1Header.setText("Origin:");
                    lblProdParam1.setText(String.valueOf(String.valueOf(nonFragProd.getOrigin())));
                    lblParam2Header.setText("Altitude:");
                    lblProdParam2.setText(String.valueOf(nonFragProd.getAltitude()));
                    lblParam3Header.setText("Tasting Notes:");
                    lblProdParam3.setText(String.valueOf(nonFragProd.getTasteNotes()));
                }
            }
        }
    }//GEN-LAST:event_lstBrowseProductMouseReleased

    private void btnBrowseCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseCoffeeActionPerformed
        prodListModel.removeAllElements();
        Customer cus = new Customer();
        ArrayList<Product> prodList = new ArrayList(cus.browseProd());
        lstBrowseProduct.setModel(prodListModel);
        for (Product prod:prodList)
        {
            if (prod.getClass() == Fragile.class)
            {
                continue;
            }
            else if (prod.getClass() == nonFragile.class)
            {
                Product nonFragProd = (nonFragile) prod;
                prodListModel.addElement(nonFragProd.getProductName());
            }
        }
    }//GEN-LAST:event_btnBrowseCoffeeActionPerformed

    private void btnBrowseEquipmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseEquipmentsActionPerformed
        prodListModel.removeAllElements();
        Customer cus = new Customer();
        ArrayList<Product> prodList = new ArrayList(cus.browseProd());
        lstBrowseProduct.setModel(prodListModel);
        for (Product prod:prodList)
        {
            if (prod.getClass() == Fragile.class)
            {
                Product fragProd = (Fragile) prod;
                prodListModel.addElement(fragProd.getProductName()); 
            }
            else if (prod.getClass() == nonFragile.class)
            {
                continue;
            }
        }
    }//GEN-LAST:event_btnBrowseEquipmentsActionPerformed

    private void btnBackToBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToBrowseActionPerformed
        cmenuBrowseProduct.doClick();
    }//GEN-LAST:event_btnBackToBrowseActionPerformed

    private void btnAddOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderItemActionPerformed
        DefaultTableModel orderItemListModel = (DefaultTableModel) tblOrderItemList.getModel();
        int rowsToRemove = orderItemListModel.getRowCount();
        //remove rows from the bottom one by one
        for (int i = rowsToRemove - 1; i >= 0; i--)
        {
            orderItemListModel.removeRow(i);
        }
            
        
        Customer cus = new Customer();
        ArrayList<Object> prodList = new ArrayList(cus.browseProd());
        for (Object prod:prodList)
        {
            if (prod instanceof Fragile)
            {
                //typeccasting each Object into a fragile object
                Fragile fragProd = (Fragile) prod;
                if (lblProdID.getText().equals(fragProd.getProductID()))
                {
                    int buyQuan = Integer.parseInt(txtOrderItemQuan.getText());
                    
                    // append order item object into order item list
                    OrderItem orderItem = new OrderItem(fragProd.getProductID(), 
                            fragProd.getProductName(), 
                            buyQuan,
                            fragProd.getProductPrice(),
                            fragProd.calcShipping(buyQuan));
                    orderItemList.add(orderItem);
                }
            }
            else
            {
                //typeccasting each Object into a non-fragile object
                nonFragile nonFragProd = (nonFragile) prod;
                if (lblProdID.getText().equals(nonFragProd.getProductID()))
                {
                    // CREATE CHECK INPUT QUANTITY VERSUS PRODUCT QUANTITY check input quantity versus product quantity
                    int buyQuan = Integer.parseInt(txtOrderItemQuan.getText());
                    
                    // append order item object into order item list
                    OrderItem orderItem = new OrderItem(nonFragProd.getProductID(), 
                            nonFragProd.getProductName(), 
                            buyQuan,
                            nonFragProd.getProductPrice(),
                            nonFragProd.calcShipping(buyQuan));
                    orderItemList.add(orderItem);

                }
            }
        }
        // Remove redundant order items in arraylist
        int count = 0;
        OrderItem dupItem = null;
        for (int i = 0; i < orderItemList.size(); i++)
        {
            if(orderItemList.get(i).getProductID().equals(lblProdID.getText()))
            {
                count = count + orderItemList.get(i).getBuyQuan();
                dupItem = orderItemList.get(i);
            }           
        }
        if (!dupItem.equals(null))
        {
            for (int i  = orderItemList.size() - 1; i >=0 ; i -- )
            {
                if (orderItemList.get(i).getProductID().equals(lblProdID.getText()))
                {
                    orderItemList.remove(i);
                }
            }
            OrderItem orderItem = new OrderItem(dupItem.getProductID(),
                        dupItem.getProductName(),
                        count,
                        dupItem.getProductPrice(),
                        dupItem.getShippingFee());
            
            orderItemList.add(orderItem);
        }
        
        cmenuEditOrder.doClick();
        
    }//GEN-LAST:event_btnAddOrderItemActionPerformed

    private void btnDecreaseQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecreaseQuanActionPerformed
        if(Integer.parseInt(txtOrderItemQuan.getText()) > 1)
        {
            int y = Integer.parseInt(txtOrderItemQuan.getText()) - 1;
            txtOrderItemQuan.setText(Integer.toString(y));
            btnAddQuan.setEnabled(true);
        } 
        else
        {
            btnDecreaseQuan.setEnabled(false);
        }
    }//GEN-LAST:event_btnDecreaseQuanActionPerformed

    private void btnAddQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQuanActionPerformed
        if(Integer.parseInt(txtOrderItemQuan.getText()) < Integer.parseInt(lblQuan.getText()))
        {
            int y = Integer.parseInt(txtOrderItemQuan.getText()) + 1;
            txtOrderItemQuan.setText(Integer.toString(y));
            btnDecreaseQuan.setEnabled(true);
        }
        else 
        {
            btnAddQuan.setEnabled(false);
        }
    }//GEN-LAST:event_btnAddQuanActionPerformed

    private void btnCreateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateOrderActionPerformed
        ArrayList<Object> manipulateProd = new ArrayList(customer.browseProd());
        for (Object prod:manipulateProd)
        {
            if (prod instanceof Fragile)
            {
                Fragile fragProd = (Fragile) prod;
                for (int i=0; i < tblOrderItemList.getRowCount(); i++)
                {
                    if (tblOrderItemList.getValueAt(i, 0).equals(fragProd.getProductName()))
                    {
                        fragProd.setProdQuantity(fragProd.getProdQuantity() - Integer.parseInt(tblOrderItemList.getValueAt(i, 1).toString()));
                    }
                }
            }
            else
            {
                nonFragile nonFragProd = (nonFragile) prod;
                for (int i=0; i < tblOrderItemList.getRowCount(); i++)
                {
                    if (tblOrderItemList.getValueAt(i, 0).equals(nonFragProd.getProductName()))
                    {
                        nonFragProd.setProdQuantity(nonFragProd.getProdQuantity() - Integer.parseInt(tblOrderItemList.getValueAt(i, 1).toString()));
                    }
                }
            }
        }
        
        Admin adm = new Admin();
        adm.editProduct(manipulateProd);
        String newOrderID = customer.genOrderID();
        Order order = new Order(newOrderID,orderItemList);
        customer.addOrder(order);
        orderItemList.clear();
        cmenuViewOrder.doClick();
    }//GEN-LAST:event_btnCreateOrderActionPerformed

    private void btnDeleteOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderItemActionPerformed
        if(tblOrderItemList.getSelectedRow() >= 0)
        {
            String selectedItem = tblOrderItemList.getValueAt(tblOrderItemList.getSelectedRow(), 0).toString();
            for (OrderItem orderItem:orderItemList)
            {
                if (orderItem.getProductName() == selectedItem)
                {
                    orderItemList.remove(orderItem);
                    cmenuEditOrder.doClick();
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnDeleteOrderItemActionPerformed

    private void lstOrderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstOrderMouseReleased
        DefaultTableModel orderOrderItemListModel = (DefaultTableModel) tblOrderOrderItems.getModel();
        
        // clear order list table
        int rowsToRemove = orderOrderItemListModel.getRowCount();
        //remove rows from the bottom one by one
        for (int i = rowsToRemove - 1; i >= 0; i--)
        {
            orderOrderItemListModel.removeRow(i);
        }
        
        try
        {
            ArrayList<Order> orderList = new ArrayList(customer.viewOrder(customer.getUID()));
            
            for (Order odr: orderList)
            {
                Object[] rowOrderItem = new Object[5];
                if (lstOrder.getSelectedValue().equals(odr.getOrderID()))
                {
                    for (Object orderItems: odr.getOrderItem())
                    {
                        OrderItem odrItems = (OrderItem) orderItems;
                        rowOrderItem[0] = odrItems.getProductName();
                        rowOrderItem[1] = odrItems.getBuyQuan();
                        rowOrderItem[2] = odrItems.getProductPrice();
                        rowOrderItem[3] = odrItems.getShippingFee();
                        rowOrderItem[4] = odrItems.calcSubtotal();
                        orderOrderItemListModel.addRow(rowOrderItem);
                    }
                    // Get grand total for selected order
                    lblViewOrderGrandTotal.setText(String.format("RM%.2f",odr.getGrandTotal()));
                }
            }
            
        }
        catch (IOException Ex)
        {

        }
    }//GEN-LAST:event_lstOrderMouseReleased

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        loginMenu newLogin = new loginMenu();
        newLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProductActionPerformed
        prodListModel.clear();
        ArrayList<Product> returnedList = new ArrayList(customer.search(customer.getUID(),String.valueOf(txtSearchProduct.getText()),"Product"));
        for (Product prod: returnedList)
        {
            prodListModel.addElement(prod.getProductName());
        }
    }//GEN-LAST:event_btnSearchProductActionPerformed

    private void btnSearchOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchOrderActionPerformed
        orderIDListModel.clear();
        ArrayList<Order> returnedList = new ArrayList(customer.search(customer.getUID(),String.valueOf(txtSearchOrder.getText()),"Order"));
        for (Order odr: returnedList)
        {
            orderIDListModel.addElement(odr.getOrderID());
        }
    }//GEN-LAST:event_btnSearchOrderActionPerformed

    private void btnDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderActionPerformed
        orderItemList.clear();
        cmenuEditOrder.doClick();
    }//GEN-LAST:event_btnDeleteOrderActionPerformed

    private void btnEditProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfActionPerformed
        if(btnEditProf.getText().equals("Confirm"))
        {
            txtProfName.setEditable(false);
            txtProfAddress.setEditable(false);
            txtProfEmail.setEditable(false);
            txtProfPhoneNo.setEditable(false);
            txtProfAddress.setEditable(false);
            txtProfPassword.setEditable(false);
            txtProfCfmPwd.setEditable(false);
            btnEditProf.setText("Edit");
            
            if(Arrays.equals(txtProfCfmPwd.getPassword(),txtProfPassword.getPassword())== false)
            {
                JOptionPane.showMessageDialog(errorMessage, " Password entered is different. Please try again","Different password entered.",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                try
                {
                    Admin adm = new Admin();
                    ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
                    for(Customer cus : cusList)
                    {
                        if (cus.getUID().equals(lblProfUserID.getText()))
                        {
                            if(cus.getName().equals(txtProfName.getText()) && cus.getAddress().equals(txtProfAddress.getText())&& 
                                    cus.getEmailAddress().equals(txtProfEmail.getText()) && cus.getPhoneNumber().equals(txtProfPhoneNo.getText()) &&
                                    cus.getPassword().equals(String.valueOf(txtProfPassword.getPassword())) || String.valueOf(txtProfPassword.getPassword()).equals(""))
                            {
                                JOptionPane.showMessageDialog(errorMessage, "No changes detected. Please retry.","No fields are changed.",JOptionPane.ERROR_MESSAGE);
                            }
                            else
                            {
                                cus.setName(txtProfName.getText());
                                cus.setEmailAddress(txtProfEmail.getText());
                                cus.setAddress(txtProfAddress.getText());
                                cus.setPhoneNumber(txtProfPhoneNo.getText());
                                customer.setName(txtProfName.getText());
                                customer.setEmailAddress(txtProfEmail.getText());
                                customer.setAddress(txtProfAddress.getText());
                                customer.setPhoneNumber(txtProfPhoneNo.getText());
                                if(txtProfPassword.getPassword().length > 0 || txtProfCfmPwd.getPassword().length > 0)
                                {
                                    cus.setPassword(String.valueOf(txtProfPassword.getPassword()));
                                } 
                                adm.editCustomer(cusList);
                            }
                        }
                    }
                }
                catch(IOException Ex)
                {
                    JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            cmenuViewProfile.doClick();
        }
        else if(btnEditProf.getText().equals("Edit"))
        {
            btnEditProf.setVisible(true);
            btnEditProfBack.setVisible(true);
            txtProfName.setEditable(true);
            txtProfEmail.setEditable(true);
            txtProfAddress.setEditable(true);
            txtProfPhoneNo.setEditable(true);
            txtProfPassword.setEditable(true);
            txtProfCfmPwd.setEditable(true);
            btnEditProf.setText("Confirm");
        }
        
    }//GEN-LAST:event_btnEditProfActionPerformed

    private void btnEditProfBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfBackActionPerformed
        btnEditProfBack.setVisible(false);
        btnEditProf.setText("Edit");
        cmenuViewProfile.doClick();
    }//GEN-LAST:event_btnEditProfBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cus_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cus_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cus_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cus_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cus_Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrderItem;
    private javax.swing.JButton btnAddQuan;
    private javax.swing.JButton btnBackToBrowse;
    private javax.swing.JButton btnBrowseCoffee;
    private javax.swing.JButton btnBrowseEquipments;
    private javax.swing.JButton btnCreateOrder;
    private javax.swing.JButton btnDecreaseQuan;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnDeleteOrderItem;
    private javax.swing.JButton btnEditProf;
    private javax.swing.JButton btnEditProfBack;
    private javax.swing.JMenuItem btnLogout;
    private javax.swing.JButton btnSearchOrder;
    private javax.swing.JButton btnSearchProduct;
    private javax.swing.JMenuItem cmenuBrowseProduct;
    private javax.swing.JMenuItem cmenuEditOrder;
    private javax.swing.JMenu cmenuHome;
    private javax.swing.JMenu cmenuOrder;
    private javax.swing.JMenu cmenuProfile;
    private javax.swing.JMenuItem cmenuReturnHome;
    private javax.swing.JMenu cmenuShop;
    private javax.swing.JMenuItem cmenuViewOrder;
    private javax.swing.JMenuItem cmenuViewProfile;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblEditOrderGrandTotal;
    private javax.swing.JLabel lblParam1Header;
    private javax.swing.JLabel lblParam2Header;
    private javax.swing.JLabel lblParam3Header;
    private javax.swing.JLabel lblProdID;
    private javax.swing.JLabel lblProdName;
    private javax.swing.JLabel lblProdParam1;
    private javax.swing.JLabel lblProdParam2;
    private javax.swing.JLabel lblProdParam3;
    private javax.swing.JLabel lblProdPrice;
    private javax.swing.JLabel lblProdType;
    private javax.swing.JLabel lblProfUserID;
    private javax.swing.JLabel lblProfUsername;
    private javax.swing.JLabel lblQuan;
    private javax.swing.JLabel lblStockStatus;
    private javax.swing.JLabel lblViewOrderGrandTotal;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JList<String> lstBrowseProduct;
    private javax.swing.JList<String> lstOrder;
    private javax.swing.JPanel pnlBrowseProduct;
    private javax.swing.JPanel pnlCusMain;
    private javax.swing.JPanel pnlCusMenu;
    private javax.swing.JPanel pnlEditOrder;
    private javax.swing.JPanel pnlViewAddProduct;
    private javax.swing.JPanel pnlViewOrderSummary;
    private javax.swing.JPanel pnlViewProfile;
    private javax.swing.JTable tblOrderItemList;
    private javax.swing.JTable tblOrderOrderItems;
    private javax.swing.JTextField txtOrderItemQuan;
    private javax.swing.JTextArea txtProfAddress;
    private javax.swing.JPasswordField txtProfCfmPwd;
    private javax.swing.JTextField txtProfEmail;
    private javax.swing.JTextField txtProfName;
    private javax.swing.JPasswordField txtProfPassword;
    private javax.swing.JTextField txtProfPhoneNo;
    private javax.swing.JTextField txtSearchOrder;
    private javax.swing.JTextField txtSearchProduct;
    // End of variables declaration//GEN-END:variables
}
