/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oodj_assignment;
import java.awt.CardLayout;
import java.io.*;
import java.util.*;
import javax.swing.*;
import java.lang.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author phili
 */
public class Admin_Menu extends javax.swing.JFrame {
    JFrame errorMessage;
    
    //grouping radio buttons
    ButtonGroup user = new ButtonGroup();
    ButtonGroup prod = new ButtonGroup();
    
    //getting the list models of jLists
    DefaultListModel cusListModel = new DefaultListModel();
    DefaultListModel prodListModel = new DefaultListModel();
    DefaultListModel prodNameListModel = new DefaultListModel();
    DefaultListModel orderIDListModel = new DefaultListModel();
    DefaultListModel searchListModel = new DefaultListModel();
    
    Customer admin;
    
    //holds the value of the selected index on jList
    int i;
    int j;
    ArrayList <OrderItem> orderItemList = new ArrayList<OrderItem>();
    /**
     * Creates new form Admin_Menu
     * @param adm
     */
    public Admin_Menu(Customer adm)
    {
        Customer admin = new Customer(adm);
        initComponents();
        this.admin  = admin;
        user.add(rbUsrAdm);
        user.add(rbUsrCus);
        prod.add(rbBeans);
        prod.add(rbEquipments);
    }
    public Admin_Menu() {
        initComponents();
        user.add(rbUsrAdm);
        user.add(rbUsrCus);
        prod.add(rbBeans);
        prod.add(rbEquipments);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        choice1 = new java.awt.Choice();
        mainAdminMain = new javax.swing.JPanel();
        pnlAdminMenu = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pnlAddCustomer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnClearField = new javax.swing.JButton();
        txtAddCusUsrname = new javax.swing.JTextField();
        txtAddCusName = new javax.swing.JTextField();
        txtAddCusPhone = new javax.swing.JTextField();
        txtAddCusAddress = new javax.swing.JTextField();
        btnAddUser = new javax.swing.JButton();
        txtAddCusEmail = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        rbUsrAdm = new javax.swing.JRadioButton();
        rbUsrCus = new javax.swing.JRadioButton();
        txtAddCusPwd = new javax.swing.JPasswordField();
        txtAddCusConfirmPw = new javax.swing.JPasswordField();
        pnlAddProduct = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lblAddProdParam1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtAddProdName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtAddProdQuantity = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        rbBeans = new javax.swing.JRadioButton();
        rbEquipments = new javax.swing.JRadioButton();
        btnAddProduct = new javax.swing.JButton();
        txtAddProdParam1 = new javax.swing.JTextField();
        txtAddProdParam3 = new javax.swing.JTextField();
        lblAddProdParam3 = new javax.swing.JLabel();
        lblAddProdParam2 = new javax.swing.JLabel();
        txtAddProdParam2 = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        txtAddProdPrice = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        txtAddProdWeight = new javax.swing.JTextField();
        pnlViewCustomer = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstCusName = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtCusName = new javax.swing.JTextField();
        txtCusUsername = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtCusAddress = new javax.swing.JTextArea();
        txtCusEmail = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDeleteCus = new javax.swing.JButton();
        txtCusPassword = new javax.swing.JPasswordField();
        txtCusPassword2 = new javax.swing.JPasswordField();
        btnBack = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        txtCusPhoneNo = new javax.swing.JTextField();
        pnlEditProduct = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstProductID = new javax.swing.JList<>();
        jLabel25 = new javax.swing.JLabel();
        txtProdQuan = new javax.swing.JTextField();
        btnEditProdDecQuan = new javax.swing.JButton();
        btnEditProdAddQuan = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        txtProdName = new javax.swing.JTextField();
        lblCurrentQuan = new javax.swing.JLabel();
        btnReset2 = new javax.swing.JButton();
        btnEditProd = new javax.swing.JButton();
        btnDeleteProd = new javax.swing.JButton();
        lblParam2 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        lblParam1 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        lblParam3 = new javax.swing.JLabel();
        txtProdWeight = new javax.swing.JTextField();
        txtProdParam1 = new javax.swing.JTextField();
        txtProdParam2 = new javax.swing.JTextField();
        txtProdParam3 = new javax.swing.JTextField();
        txtProdPrice = new javax.swing.JTextField();
        btnEditProdBack = new javax.swing.JButton();
        pnlEditOrder = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblOrderItemList = new javax.swing.JTable();
        btnDeleteOrderItem = new javax.swing.JButton();
        btnCreateOrder = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        lblEditOrderGrandTotal = new javax.swing.JLabel();
        btnDeleteOrder = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        txtSearchBar = new javax.swing.JTextField();
        rbSearchCus = new javax.swing.JRadioButton();
        rbSearchProd = new javax.swing.JRadioButton();
        rbSearchOrder = new javax.swing.JRadioButton();
        btnSearchEnter = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        lstSearchResult = new javax.swing.JList<>();
        jLabel32 = new javax.swing.JLabel();
        lblSearchElement = new javax.swing.JLabel();
        lblSelectSearchWarning = new javax.swing.JLabel();
        pnlAddOrderItem = new javax.swing.JPanel();
        txtOrderItemQuan = new javax.swing.JTextField();
        btnDecreaseQuan = new javax.swing.JButton();
        btnAddQuan = new javax.swing.JButton();
        btnAddOrderItem = new javax.swing.JButton();
        lblParam3Header = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblParam2Header = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        lblParam1Header = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        lblProdName = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        lblProdParam3 = new javax.swing.JLabel();
        lblProdType = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblProdParam2 = new javax.swing.JLabel();
        lblProdID = new javax.swing.JLabel();
        lblProdParam1 = new javax.swing.JLabel();
        lblQuan = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        lblProdPrice = new javax.swing.JLabel();
        btnBackBrowseProduct = new javax.swing.JButton();
        pnlBrowseProduct = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        btnBrowseCoffee = new javax.swing.JButton();
        btnBrowseEquipment = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstBrowseProduct = new javax.swing.JList<>();
        pnlViewOrderSummary = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        lstOrder = new javax.swing.JList<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblOrderOrderItems = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        lblViewOrderGrandTotal = new javax.swing.JLabel();
        pnlViewProfile = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        menuSearchMenu = new javax.swing.JMenuBar();
        menuAdd = new javax.swing.JMenu();
        menuAddUser = new javax.swing.JMenuItem();
        menuAddProduct = new javax.swing.JMenuItem();
        menuCus = new javax.swing.JMenu();
        menuViewCustomer = new javax.swing.JMenuItem();
        menuProd = new javax.swing.JMenu();
        menuEditProduct = new javax.swing.JMenuItem();
        menuShop = new javax.swing.JMenu();
        menuBrowseProduct = new javax.swing.JMenuItem();
        menuOrder = new javax.swing.JMenu();
        menuEditOrder = new javax.swing.JMenuItem();
        menuViewOrder = new javax.swing.JMenuItem();
        menuSearch = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuProfile = new javax.swing.JMenu();
        menuEditProfile = new javax.swing.JMenuItem();
        jMenuHome = new javax.swing.JMenu();
        btnLogout = new javax.swing.JMenuItem();
        menuHome = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainAdminMain.setLayout(new java.awt.CardLayout());

        pnlAdminMenu.setBackground(new java.awt.Color(165, 177, 194));

        jLabel20.setFont(new java.awt.Font("Segoe UI Emoji", 3, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Welcome to RMS Admin Menu");

        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oodj_assignment/diagrams/Tea.png"))); // NOI18N

        javax.swing.GroupLayout pnlAdminMenuLayout = new javax.swing.GroupLayout(pnlAdminMenu);
        pnlAdminMenu.setLayout(pnlAdminMenuLayout);
        pnlAdminMenuLayout.setHorizontalGroup(
            pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMenuLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addGroup(pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminMenuLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(248, 248, 248))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminMenuLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))))
        );
        pnlAdminMenuLayout.setVerticalGroup(
            pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMenuLayout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        mainAdminMain.add(pnlAdminMenu, "pnlAdminMenu");

        pnlAddCustomer.setBackground(new java.awt.Color(231, 76, 60));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(44, 62, 80));
        jLabel1.setText("Add New User");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(44, 62, 80));
        jLabel2.setText("Username: ");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(44, 62, 80));
        jLabel3.setText("Name: ");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(44, 62, 80));
        jLabel4.setText("Address: ");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(44, 62, 80));
        jLabel5.setText("Confirm Password:");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(44, 62, 80));
        jLabel6.setText(" Email address: ");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(44, 62, 80));
        jLabel7.setText("Phone number:  ");

        btnClearField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnClearField.setText("Reset");
        btnClearField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFieldActionPerformed(evt);
            }
        });

        txtAddCusUsrname.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtAddCusName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtAddCusPhone.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtAddCusAddress.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        btnAddUser.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        btnAddUser.setText("Add");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        txtAddCusEmail.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(44, 62, 80));
        jLabel28.setText("Password: ");

        rbUsrAdm.setForeground(new java.awt.Color(0, 0, 0));
        rbUsrAdm.setText("Admin");

        rbUsrCus.setForeground(new java.awt.Color(0, 0, 0));
        rbUsrCus.setText("Customer");

        javax.swing.GroupLayout pnlAddCustomerLayout = new javax.swing.GroupLayout(pnlAddCustomer);
        pnlAddCustomer.setLayout(pnlAddCustomerLayout);
        pnlAddCustomerLayout.setHorizontalGroup(
            pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel28)
                            .addComponent(jLabel5)
                            .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddCusName, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(txtAddCusUsrname, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(txtAddCusPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(txtAddCusAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(txtAddCusEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(txtAddCusPwd)
                            .addComponent(txtAddCusConfirmPw)))
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClearField)))
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbUsrCus, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbUsrAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlAddCustomerLayout.setVerticalGroup(
            pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAddCusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAddCusUsrname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addComponent(rbUsrCus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbUsrAdm)))
                .addGap(14, 14, 14)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAddCustomerLayout.createSequentialGroup()
                        .addComponent(txtAddCusPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txtAddCusConfirmPw, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddCusEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddCusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddCusAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addGroup(pnlAddCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser)
                    .addComponent(btnClearField))
                .addGap(19, 19, 19))
        );

        mainAdminMain.add(pnlAddCustomer, "pnlAddCustomer");

        pnlAddProduct.setBackground(new java.awt.Color(39, 174, 96));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Add New Product");

        lblAddProdParam1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblAddProdParam1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAddProdParam1.setText("Origin:");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Product Name:");

        txtAddProdName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Quantity:");

        txtAddProdQuantity.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Type:");

        rbBeans.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        rbBeans.setText("Beans");
        rbBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBeansActionPerformed(evt);
            }
        });

        rbEquipments.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        rbEquipments.setText("Equipments");
        rbEquipments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEquipmentsActionPerformed(evt);
            }
        });

        btnAddProduct.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnAddProduct.setText("Add Product");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        txtAddProdParam1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtAddProdParam3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        lblAddProdParam3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblAddProdParam3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAddProdParam3.setText("Tasting Notes:");

        lblAddProdParam2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblAddProdParam2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAddProdParam2.setText("Altitude (ft):");

        txtAddProdParam2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel67.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel67.setText("Price (RM):");

        txtAddProdPrice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel68.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel68.setText("Weight (kg):");

        txtAddProdWeight.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnlAddProductLayout = new javax.swing.GroupLayout(pnlAddProduct);
        pnlAddProduct.setLayout(pnlAddProductLayout);
        pnlAddProductLayout.setHorizontalGroup(
            pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddProductLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddProductLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(195, 195, 195))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddProductLayout.createSequentialGroup()
                        .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddProductLayout.createSequentialGroup()
                                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlAddProductLayout.createSequentialGroup()
                                        .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(pnlAddProductLayout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(lblAddProdParam3))
                                            .addComponent(lblAddProdParam2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblAddProdParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAddProdParam2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddProdParam3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddProdParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlAddProductLayout.createSequentialGroup()
                                        .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel67, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(28, 28, 28)
                                        .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAddProdName, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddProdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddProdWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(pnlAddProductLayout.createSequentialGroup()
                                                .addComponent(rbBeans)
                                                .addGap(34, 34, 34)
                                                .addComponent(rbEquipments)))))
                                .addGap(135, 135, 135))
                            .addComponent(btnAddProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))))
        );
        pnlAddProductLayout.setVerticalGroup(
            pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddProductLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtAddProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddProductLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtAddProdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(txtAddProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(txtAddProdWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(rbBeans)
                    .addComponent(rbEquipments))
                .addGap(18, 18, 18)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddProdParam1)
                    .addComponent(txtAddProdParam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddProdParam2)
                    .addComponent(txtAddProdParam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddProdParam3)
                    .addComponent(txtAddProdParam3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        mainAdminMain.add(pnlAddProduct, "pnlAddProduct");

        pnlViewCustomer.setBackground(new java.awt.Color(247, 183, 49));
        pnlViewCustomer.setMaximumSize(new java.awt.Dimension(750, 500));
        pnlViewCustomer.setMinimumSize(new java.awt.Dimension(750, 500));
        pnlViewCustomer.setPreferredSize(new java.awt.Dimension(750, 500));

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("View Customer");

        lstCusName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lstCusName.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCusName.setMaximumSize(new java.awt.Dimension(148, 105));
        lstCusName.setMinimumSize(new java.awt.Dimension(148, 105));
        lstCusName.setPreferredSize(new java.awt.Dimension(148, 105));
        lstCusName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstCusNameMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(lstCusName);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Username:");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Customer selected:");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Confirm Password:");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Address:");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Password:");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Email Address:");

        txtCusName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCusName.setForeground(new java.awt.Color(0, 0, 0));

        txtCusUsername.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCusUsername.setForeground(new java.awt.Color(0, 0, 0));

        txtCusAddress.setColumns(20);
        txtCusAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCusAddress.setRows(5);
        jScrollPane3.setViewportView(txtCusAddress);

        txtCusEmail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCusEmail.setForeground(new java.awt.Color(0, 0, 0));

        btnEdit.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDeleteCus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnDeleteCus.setForeground(new java.awt.Color(204, 0, 51));
        btnDeleteCus.setText("Delete Customer");
        btnDeleteCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCusActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Phone number:");

        txtCusPhoneNo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCusPhoneNo.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlViewCustomerLayout = new javax.swing.GroupLayout(pnlViewCustomer);
        pnlViewCustomer.setLayout(pnlViewCustomerLayout);
        pnlViewCustomerLayout.setHorizontalGroup(
            pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlViewCustomerLayout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(254, 254, 254))
                    .addGroup(pnlViewCustomerLayout.createSequentialGroup()
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDeleteCus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(txtCusEmail)
                            .addComponent(txtCusUsername)
                            .addComponent(txtCusName)
                            .addComponent(txtCusPassword)
                            .addComponent(txtCusPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCusPhoneNo))
                        .addGap(108, 108, 108))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewCustomerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        pnlViewCustomerLayout.setVerticalGroup(
            pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewCustomerLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteCus, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlViewCustomerLayout.createSequentialGroup()
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtCusUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtCusEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(12, 12, 12)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txtCusPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCusPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(19, 19, 19)
                        .addGroup(pnlViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtCusPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit)
                .addGap(35, 35, 35))
        );

        mainAdminMain.add(pnlViewCustomer, "pnlViewCustomer");

        pnlEditProduct.setBackground(new java.awt.Color(45, 152, 218));

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Edit Product Info");

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Product Name:");

        lstProductID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lstProductID.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstProductID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstProductIDMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(lstProductID);

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Add/RemoveQuantity:");

        txtProdQuan.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtProdQuan.setMaximumSize(new java.awt.Dimension(100, 30));
        txtProdQuan.setMinimumSize(new java.awt.Dimension(100, 30));
        txtProdQuan.setPreferredSize(new java.awt.Dimension(100, 30));

        btnEditProdDecQuan.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnEditProdDecQuan.setText("-");
        btnEditProdDecQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProdDecQuanActionPerformed(evt);
            }
        });

        btnEditProdAddQuan.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnEditProdAddQuan.setText("+");
        btnEditProdAddQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProdAddQuanActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Current quantity:");

        txtProdName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        lblCurrentQuan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCurrentQuan.setForeground(new java.awt.Color(0, 0, 0));

        btnReset2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnReset2.setText("Reset");

        btnEditProd.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnEditProd.setText("Edit");
        btnEditProd.setMaximumSize(new java.awt.Dimension(231, 38));
        btnEditProd.setMinimumSize(new java.awt.Dimension(231, 38));
        btnEditProd.setPreferredSize(new java.awt.Dimension(231, 38));
        btnEditProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProdActionPerformed(evt);
            }
        });

        btnDeleteProd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteProd.setForeground(new java.awt.Color(204, 0, 51));
        btnDeleteProd.setText("Delete Product");

        lblParam2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblParam2.setForeground(new java.awt.Color(0, 0, 0));
        lblParam2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblParam2.setText("Altitude:");
        lblParam2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblParam2.setMaximumSize(new java.awt.Dimension(162, 28));
        lblParam2.setMinimumSize(new java.awt.Dimension(162, 28));
        lblParam2.setPreferredSize(new java.awt.Dimension(162, 28));

        jLabel69.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(0, 0, 0));
        jLabel69.setText("Price:");

        lblParam1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblParam1.setForeground(new java.awt.Color(0, 0, 0));
        lblParam1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblParam1.setText("Origin:");
        lblParam1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblParam1.setMaximumSize(new java.awt.Dimension(162, 28));
        lblParam1.setMinimumSize(new java.awt.Dimension(162, 28));
        lblParam1.setPreferredSize(new java.awt.Dimension(162, 28));

        jLabel71.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(0, 0, 0));
        jLabel71.setText("Weight:");

        lblParam3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblParam3.setForeground(new java.awt.Color(0, 0, 0));
        lblParam3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblParam3.setText("Tasting notes:");
        lblParam3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblParam3.setMaximumSize(new java.awt.Dimension(162, 28));
        lblParam3.setMinimumSize(new java.awt.Dimension(162, 28));
        lblParam3.setPreferredSize(new java.awt.Dimension(162, 28));

        txtProdWeight.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtProdParam1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtProdParam2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtProdParam3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtProdPrice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        btnEditProdBack.setText("Back");

        javax.swing.GroupLayout pnlEditProductLayout = new javax.swing.GroupLayout(pnlEditProduct);
        pnlEditProduct.setLayout(pnlEditProductLayout);
        pnlEditProductLayout.setHorizontalGroup(
            pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditProductLayout.createSequentialGroup()
                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                        .addContainerGap(182, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(288, 288, 288))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlEditProductLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditProdBack)
                            .addGroup(pnlEditProductLayout.createSequentialGroup()
                                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(btnDeleteProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnReset2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel71)
                                            .addComponent(jLabel69)
                                            .addComponent(jLabel26))
                                        .addGap(29, 29, 29)
                                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnEditProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(pnlEditProductLayout.createSequentialGroup()
                                                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtProdName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                                    .addComponent(txtProdWeight, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtProdPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblCurrentQuan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlEditProductLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel25)
                                                .addGap(29, 29, 29)
                                                .addComponent(txtProdQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(95, 95, 95)
                                                .addComponent(btnEditProdDecQuan)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnEditProdAddQuan))
                                            .addGroup(pnlEditProductLayout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(lblParam2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lblParam3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lblParam1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(29, 29, 29)
                                                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtProdParam2, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                                    .addComponent(txtProdParam1)
                                                    .addComponent(txtProdParam3))))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        pnlEditProductLayout.setVerticalGroup(
            pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditProductLayout.createSequentialGroup()
                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel23))
                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnEditProdBack, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteProd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditProductLayout.createSequentialGroup()
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProdWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel71))
                        .addGap(14, 14, 14)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel69)
                            .addComponent(txtProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(lblCurrentQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtProdQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditProdDecQuan)
                            .addComponent(btnEditProdAddQuan))
                        .addGap(26, 26, 26)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblParam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProdParam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProdParam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblParam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblParam3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProdParam3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(pnlEditProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditProductLayout.createSequentialGroup()
                        .addComponent(btnReset2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditProductLayout.createSequentialGroup()
                        .addComponent(btnEditProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );

        mainAdminMain.add(pnlEditProduct, "pnlEditProduct");

        pnlEditOrder.setBackground(new java.awt.Color(153, 255, 153));
        pnlEditOrder.setMaximumSize(new java.awt.Dimension(750, 500));
        pnlEditOrder.setPreferredSize(new java.awt.Dimension(750, 500));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Items currently in cart:");

        tblOrderItemList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product name", "Quantity", "Price", "Shipping Fee", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tblOrderItemList);
        if (tblOrderItemList.getColumnModel().getColumnCount() > 0) {
            tblOrderItemList.getColumnModel().getColumn(0).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(0).setPreferredWidth(350);
            tblOrderItemList.getColumnModel().getColumn(1).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblOrderItemList.getColumnModel().getColumn(2).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblOrderItemList.getColumnModel().getColumn(3).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblOrderItemList.getColumnModel().getColumn(4).setResizable(false);
            tblOrderItemList.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        btnDeleteOrderItem.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnDeleteOrderItem.setForeground(new java.awt.Color(204, 0, 0));
        btnDeleteOrderItem.setText("Delete Item");
        btnDeleteOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderItemActionPerformed(evt);
            }
        });

        btnCreateOrder.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCreateOrder.setText("Create Order");
        btnCreateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateOrderActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Grand Total:");

        lblEditOrderGrandTotal.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblEditOrderGrandTotal.setForeground(new java.awt.Color(0, 153, 51));
        lblEditOrderGrandTotal.setText("RM0.00");

        btnDeleteOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDeleteOrder.setForeground(new java.awt.Color(204, 0, 0));
        btnDeleteOrder.setText("Delete Order");
        btnDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditOrderLayout = new javax.swing.GroupLayout(pnlEditOrder);
        pnlEditOrder.setLayout(pnlEditOrderLayout);
        pnlEditOrderLayout.setHorizontalGroup(
            pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditOrderLayout.createSequentialGroup()
                .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel35))
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDeleteOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(402, 402, 402)
                        .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblEditOrderGrandTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(btnCreateOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pnlEditOrderLayout.setVerticalGroup(
            pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditOrderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEditOrderGrandTotal)
                .addGap(18, 18, 18)
                .addGroup(pnlEditOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCreateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlEditOrderLayout.createSequentialGroup()
                        .addComponent(btnDeleteOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(7, 7, 7)))
                .addContainerGap())
        );

        mainAdminMain.add(pnlEditOrder, "pnlEditOrder");

        pnlSearch.setBackground(new java.awt.Color(255, 255, 102));

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Enter ID or name to search:");

        rbSearchCus.setBackground(new java.awt.Color(255, 255, 102));
        buttonGroup1.add(rbSearchCus);
        rbSearchCus.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        rbSearchCus.setForeground(new java.awt.Color(0, 0, 0));
        rbSearchCus.setText("Customer");
        rbSearchCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchCusActionPerformed(evt);
            }
        });

        rbSearchProd.setBackground(new java.awt.Color(255, 255, 102));
        buttonGroup1.add(rbSearchProd);
        rbSearchProd.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        rbSearchProd.setForeground(new java.awt.Color(0, 0, 0));
        rbSearchProd.setText("Product");
        rbSearchProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchProdActionPerformed(evt);
            }
        });

        rbSearchOrder.setBackground(new java.awt.Color(255, 255, 102));
        buttonGroup1.add(rbSearchOrder);
        rbSearchOrder.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        rbSearchOrder.setForeground(new java.awt.Color(0, 0, 0));
        rbSearchOrder.setText("Order");
        rbSearchOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchOrderActionPerformed(evt);
            }
        });

        btnSearchEnter.setText("Enter");
        btnSearchEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchEnterActionPerformed(evt);
            }
        });

        jScrollPane6.setViewportView(lstSearchResult);

        jLabel32.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("Searching for:");

        lblSearchElement.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblSearchElement.setForeground(new java.awt.Color(0, 0, 0));
        lblSearchElement.setText("                           ");

        lblSelectSearchWarning.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        lblSelectSearchWarning.setForeground(new java.awt.Color(204, 0, 0));
        lblSelectSearchWarning.setText("Please select an element to search!");

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSearchLayout.createSequentialGroup()
                            .addComponent(rbSearchCus, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbSearchProd, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(rbSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                            .addComponent(btnSearchEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtSearchBar)
                        .addComponent(jScrollPane6)
                        .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addComponent(lblSearchElement, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSelectSearchWarning))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchCus)
                    .addComponent(btnSearchEnter)
                    .addComponent(rbSearchProd)
                    .addComponent(rbSearchOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSelectSearchWarning)
                .addGap(29, 29, 29)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(lblSearchElement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        mainAdminMain.add(pnlSearch, "pnlSearch");

        pnlAddOrderItem.setBackground(new java.awt.Color(204, 204, 255));

        txtOrderItemQuan.setText("1");

        btnDecreaseQuan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDecreaseQuan.setText("-");
        btnDecreaseQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecreaseQuanActionPerformed(evt);
            }
        });

        btnAddQuan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddQuan.setText("+");
        btnAddQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQuanActionPerformed(evt);
            }
        });

        btnAddOrderItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAddOrderItem.setText("Add to Order");
        btnAddOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderItemActionPerformed(evt);
            }
        });

        lblParam3Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblParam3Header.setForeground(new java.awt.Color(0, 0, 0));
        lblParam3Header.setText("Param3:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Type:");

        lblParam2Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblParam2Header.setForeground(new java.awt.Color(0, 0, 0));
        lblParam2Header.setText("Param2:");

        jLabel70.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(0, 0, 0));
        jLabel70.setText("Weight:");

        lblParam1Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblParam1Header.setForeground(new java.awt.Color(0, 0, 0));
        lblParam1Header.setText("Param1:");

        jLabel72.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(0, 0, 0));
        jLabel72.setText("Product ID:");

        lblProdName.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblProdName.setForeground(new java.awt.Color(102, 102, 102));
        lblProdName.setText("name");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(0, 0, 0));
        jLabel47.setText("Product Description:");

        lblProdParam3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdParam3.setForeground(new java.awt.Color(0, 0, 0));
        lblProdParam3.setText("param3");

        lblProdType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdType.setForeground(new java.awt.Color(0, 0, 0));
        lblProdType.setText("type");

        lblWeight.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblWeight.setForeground(new java.awt.Color(0, 0, 0));
        lblWeight.setText("weight");

        lblProdParam2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdParam2.setForeground(new java.awt.Color(0, 0, 0));
        lblProdParam2.setText("param2");

        lblProdID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdID.setForeground(new java.awt.Color(0, 0, 0));
        lblProdID.setText("id");

        lblProdParam1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdParam1.setForeground(new java.awt.Color(0, 0, 0));
        lblProdParam1.setText("param1");

        lblQuan.setForeground(new java.awt.Color(0, 0, 0));
        lblQuan.setText("int/ Out of stock!");

        jLabel48.setForeground(new java.awt.Color(0, 0, 0));
        jLabel48.setText("In stock:");

        lblProdPrice.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblProdPrice.setForeground(new java.awt.Color(51, 204, 0));
        lblProdPrice.setText("**price**");

        btnBackBrowseProduct.setText("Back");
        btnBackBrowseProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackBrowseProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddOrderItemLayout = new javax.swing.GroupLayout(pnlAddOrderItem);
        pnlAddOrderItem.setLayout(pnlAddOrderItemLayout);
        pnlAddOrderItemLayout.setHorizontalGroup(
            pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProdType, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProdParam3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblProdParam2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblParam2Header, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblProdParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblParam1Header, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblParam3Header, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuan)
                            .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                                    .addComponent(txtOrderItemQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnDecreaseQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnAddOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                        .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(592, 592, 592))
                    .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(lblProdName)
                            .addComponent(btnBackBrowseProduct)
                            .addComponent(lblProdID, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddOrderItemLayout.createSequentialGroup()
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                                .addComponent(jLabel70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(90, 90, 90))
                            .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(502, 502, 502)))
                .addContainerGap())
        );
        pnlAddOrderItemLayout.setVerticalGroup(
            pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackBrowseProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblProdName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47)
                .addGap(34, 34, 34)
                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(lblParam1Header))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProdID)
                    .addComponent(lblProdParam1))
                .addGap(37, 37, 37)
                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                        .addGap(0, 105, Short.MAX_VALUE)
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddOrderItemLayout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddOrderItemLayout.createSequentialGroup()
                                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(lblParam3Header))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblProdType)
                                    .addComponent(lblProdParam3))
                                .addGap(22, 22, 22)))
                        .addComponent(lblQuan)
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOrderItemQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDecreaseQuan)
                            .addComponent(btnAddQuan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProdPrice)))
                    .addGroup(pnlAddOrderItemLayout.createSequentialGroup()
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel70)
                            .addComponent(lblParam2Header))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddOrderItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeight)
                            .addComponent(lblProdParam2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mainAdminMain.add(pnlAddOrderItem, "pnlAddOrderItem");

        pnlBrowseProduct.setBackground(new java.awt.Color(255, 204, 204));
        pnlBrowseProduct.setForeground(new java.awt.Color(255, 204, 204));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Shop Our Product:");

        btnBrowseCoffee.setText("Coffee");
        btnBrowseCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseCoffeeActionPerformed(evt);
            }
        });

        btnBrowseEquipment.setText("Equipment");
        btnBrowseEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseEquipmentActionPerformed(evt);
            }
        });

        lstBrowseProduct.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstBrowseProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstBrowseProductMouseReleased(evt);
            }
        });
        jScrollPane7.setViewportView(lstBrowseProduct);

        javax.swing.GroupLayout pnlBrowseProductLayout = new javax.swing.GroupLayout(pnlBrowseProduct);
        pnlBrowseProduct.setLayout(pnlBrowseProductLayout);
        pnlBrowseProductLayout.setHorizontalGroup(
            pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBrowseProductLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addGroup(pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBrowseProductLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(114, 114, 114))
                    .addComponent(btnBrowseEquipment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseCoffee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        pnlBrowseProductLayout.setVerticalGroup(
            pnlBrowseProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBrowseProductLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowseCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBrowseEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        mainAdminMain.add(pnlBrowseProduct, "pnlBrowseProduct");

        pnlViewOrderSummary.setBackground(new java.awt.Color(102, 204, 255));
        pnlViewOrderSummary.setForeground(new java.awt.Color(102, 204, 255));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Order List:");

        lstOrder.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstOrderMouseReleased(evt);
            }
        });
        jScrollPane8.setViewportView(lstOrder);

        tblOrderOrderItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product name", "Quantity", "Price", "Shipping Fee", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tblOrderOrderItems);
        if (tblOrderOrderItems.getColumnModel().getColumnCount() > 0) {
            tblOrderOrderItems.getColumnModel().getColumn(0).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(0).setPreferredWidth(300);
            tblOrderOrderItems.getColumnModel().getColumn(1).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblOrderOrderItems.getColumnModel().getColumn(2).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblOrderOrderItems.getColumnModel().getColumn(3).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblOrderOrderItems.getColumnModel().getColumn(4).setResizable(false);
            tblOrderOrderItems.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLabel31.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Grand Total:");

        lblViewOrderGrandTotal.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblViewOrderGrandTotal.setForeground(new java.awt.Color(0, 153, 51));
        lblViewOrderGrandTotal.setText("**Price**");

        javax.swing.GroupLayout pnlViewOrderSummaryLayout = new javax.swing.GroupLayout(pnlViewOrderSummary);
        pnlViewOrderSummary.setLayout(pnlViewOrderSummaryLayout);
        pnlViewOrderSummaryLayout.setHorizontalGroup(
            pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel30)
                        .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel31)
                        .addComponent(lblViewOrderGrandTotal)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        pnlViewOrderSummaryLayout.setVerticalGroup(
            pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewOrderSummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlViewOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblViewOrderGrandTotal)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        mainAdminMain.add(pnlViewOrderSummary, "pnlViewOrderSummary");

        pnlViewProfile.setBackground(new java.awt.Color(204, 255, 204));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("*username*");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("'s Profile");

        jLabel59.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(0, 0, 0));
        jLabel59.setText("User ID:");

        jLabel60.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(0, 0, 0));
        jLabel60.setText("**UserID**");

        jLabel61.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(0, 0, 0));
        jLabel61.setText("Name:");

        jLabel62.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(0, 0, 0));
        jLabel62.setText("Email:");

        jLabel63.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(0, 0, 0));
        jLabel63.setText("Phone no:");

        jLabel64.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(0, 0, 0));
        jLabel64.setText("Address:");

        jLabel65.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(0, 0, 0));
        jLabel65.setText("Password:");

        jLabel66.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(0, 0, 0));
        jLabel66.setText("Confirm Password:");

        jTextField2.setMaximumSize(new java.awt.Dimension(64, 30));
        jTextField2.setMinimumSize(new java.awt.Dimension(64, 30));
        jTextField2.setPreferredSize(new java.awt.Dimension(64, 30));

        jTextField3.setMaximumSize(new java.awt.Dimension(64, 30));
        jTextField3.setMinimumSize(new java.awt.Dimension(64, 30));
        jTextField3.setPreferredSize(new java.awt.Dimension(64, 30));

        jTextField4.setMaximumSize(new java.awt.Dimension(64, 30));
        jTextField4.setMinimumSize(new java.awt.Dimension(64, 30));
        jTextField4.setPreferredSize(new java.awt.Dimension(64, 30));

        jTextField5.setMaximumSize(new java.awt.Dimension(64, 30));
        jTextField5.setMinimumSize(new java.awt.Dimension(64, 30));
        jTextField5.setPreferredSize(new java.awt.Dimension(64, 30));

        jButton13.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton13.setText("Edit");

        javax.swing.GroupLayout pnlViewProfileLayout = new javax.swing.GroupLayout(pnlViewProfile);
        pnlViewProfile.setLayout(pnlViewProfileLayout);
        pnlViewProfileLayout.setHorizontalGroup(
            pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewProfileLayout.createSequentialGroup()
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlViewProfileLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlViewProfileLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel60))
                            .addGroup(pnlViewProfileLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel34))))
                    .addGroup(pnlViewProfileLayout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlViewProfileLayout.createSequentialGroup()
                                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlViewProfileLayout.createSequentialGroup()
                                .addComponent(jLabel61)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlViewProfileLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel66)
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordField2))
                    .addGroup(pnlViewProfileLayout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel64)
                            .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel63)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPasswordField1))))
                .addContainerGap(231, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewProfileLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton13)
                .addGap(18, 18, 18))
        );
        pnlViewProfileLayout.setVerticalGroup(
            pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewProfileLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60))
                .addGap(18, 18, 18)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel65)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlViewProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewProfileLayout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(jLabel66))
                    .addGroup(pnlViewProfileLayout.createSequentialGroup()
                        .addComponent(jPasswordField2)
                        .addGap(2, 2, 2)))
                .addGap(154, 154, 154)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        mainAdminMain.add(pnlViewProfile, "pnlViewProfile");

        menuSearchMenu.setBackground(new java.awt.Color(255, 255, 255));
        menuSearchMenu.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        menuSearchMenu.setMaximumSize(new java.awt.Dimension(750, 48));
        menuSearchMenu.setMinimumSize(new java.awt.Dimension(750, 48));
        menuSearchMenu.setPreferredSize(new java.awt.Dimension(750, 48));

        menuAdd.setText("Add");
        menuAdd.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        menuAdd.setMinimumSize(new java.awt.Dimension(45, 25));
        menuAdd.setPreferredSize(new java.awt.Dimension(45, 25));

        menuAddUser.setText("Add User");
        menuAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddUserActionPerformed(evt);
            }
        });
        menuAdd.add(menuAddUser);

        menuAddProduct.setText("Add Product");
        menuAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddProductActionPerformed(evt);
            }
        });
        menuAdd.add(menuAddProduct);

        menuSearchMenu.add(menuAdd);

        menuCus.setText("Customer");
        menuCus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        menuCus.setPreferredSize(new java.awt.Dimension(90, 0));

        menuViewCustomer.setText("View Customer");
        menuViewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewCustomerActionPerformed(evt);
            }
        });
        menuCus.add(menuViewCustomer);

        menuSearchMenu.add(menuCus);

        menuProd.setText("Product");
        menuProd.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        menuProd.setPreferredSize(new java.awt.Dimension(80, 0));

        menuEditProduct.setText("Edit Product");
        menuEditProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditProductActionPerformed(evt);
            }
        });
        menuProd.add(menuEditProduct);

        menuSearchMenu.add(menuProd);

        menuShop.setText("Shop");
        menuShop.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        menuShop.setMaximumSize(new java.awt.Dimension(60, 26));
        menuShop.setMinimumSize(new java.awt.Dimension(60, 26));
        menuShop.setPreferredSize(new java.awt.Dimension(60, 26));

        menuBrowseProduct.setText("Browse Product");
        menuBrowseProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBrowseProductActionPerformed(evt);
            }
        });
        menuShop.add(menuBrowseProduct);

        menuSearchMenu.add(menuShop);

        menuOrder.setText("Order");
        menuOrder.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        menuOrder.setPreferredSize(new java.awt.Dimension(60, 0));

        menuEditOrder.setText("View/Edit Order");
        menuEditOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditOrderActionPerformed(evt);
            }
        });
        menuOrder.add(menuEditOrder);

        menuViewOrder.setText("View Order History");
        menuViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewOrderActionPerformed(evt);
            }
        });
        menuOrder.add(menuViewOrder);

        menuSearchMenu.add(menuOrder);

        menuSearch.setText("Search");
        menuSearch.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        menuSearch.setMaximumSize(new java.awt.Dimension(70, 25));
        menuSearch.setPreferredSize(new java.awt.Dimension(70, 25));

        jMenuItem1.setText("Search Menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuSearch.add(jMenuItem1);

        menuSearchMenu.add(menuSearch);

        menuProfile.setText("Profile");
        menuProfile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        menuProfile.setMinimumSize(new java.awt.Dimension(60, 0));
        menuProfile.setPreferredSize(new java.awt.Dimension(65, 0));

        menuEditProfile.setText("Profile Menu");
        menuEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditProfileActionPerformed(evt);
            }
        });
        menuProfile.add(menuEditProfile);

        menuSearchMenu.add(menuProfile);

        jMenuHome.setText("Home");
        jMenuHome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuHome.setPreferredSize(new java.awt.Dimension(60, 0));

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jMenuHome.add(btnLogout);

        menuHome.setText("Return to Home");
        menuHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHomeActionPerformed(evt);
            }
        });
        jMenuHome.add(menuHome);

        menuSearchMenu.add(jMenuHome);

        setJMenuBar(menuSearchMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainAdminMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainAdminMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddUserActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlAddCustomer");
    }//GEN-LAST:event_menuAddUserActionPerformed

    private void menuAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddProductActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlAddProduct");
        
        lblAddProdParam1.setVisible(false);
        lblAddProdParam2.setVisible(false);
        lblAddProdParam3.setVisible(false);
        
        txtAddProdParam1.setVisible(false);
        txtAddProdParam2.setVisible(false);
        txtAddProdParam3.setVisible(false);
        
    }//GEN-LAST:event_menuAddProductActionPerformed

    private void menuHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHomeActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlAdminMenu");
    }//GEN-LAST:event_menuHomeActionPerformed

    private void menuViewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewCustomerActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlViewCustomer");
        cusListModel.removeAllElements();
        btnBack.setVisible(false);
        btnDeleteCus.setVisible(false);
        btnReset.setVisible(false);
        txtCusName.setEditable(false);
        txtCusUsername.setEditable(false);
        txtCusEmail.setEditable(false);
        txtCusAddress.setEditable(false);
        txtCusPhoneNo.setEditable(false);
        txtCusPassword.setEditable(false);
        txtCusPassword2.setEditable(false);
        try
        {
            Admin adm = new Admin();
            ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
            lstCusName.setModel(cusListModel);
            
            for (int x = 0; x < cusList.size(); x++)
            {
                cusListModel.addElement(cusList.get(x).getUID());
                if (x == 0)
                {
                    txtCusName.setText(cusList.get(x).getName());
                    txtCusUsername.setText(cusList.get(x).getUsername());
                    txtCusAddress.setText(cusList.get(x).getAddress());
                    txtCusEmail.setText(cusList.get(x).getEmailAddress());
                    txtCusPhoneNo.setText(cusList.get(x).getPhoneNumber());
                }
            }
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuViewCustomerActionPerformed

    private void menuEditProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditProductActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlEditProduct");
        btnEditProdAddQuan.setEnabled(false);
        btnEditProdDecQuan.setEnabled(false);
        txtProdQuan.setEditable(false);
        prodListModel.removeAllElements();
        btnEditProd.setEnabled(false);
        btnEditProdBack.setVisible(false);
        btnDeleteProd.setVisible(false);
        txtProdName.setEditable(false);
        txtProdWeight.setEditable(false);
        txtProdPrice.setEditable(false);
        txtProdParam1.setEditable(false);
        txtProdParam2.setEditable(false);
        txtProdParam3.setEditable(false);
        try
        {
            Admin adm = new Admin();
            ArrayList<Product> prodList = new ArrayList(adm.viewProduct());
            lstProductID.setModel(prodListModel);
            
            for (Product prod:prodList)
            {
                if (prod.getClass() == Fragile.class)
                {
                    Product fragProd = (Fragile) prod;
                    prodListModel.addElement(fragProd.productID);
                }
                else if (prod.getClass() == nonFragile.class)
                {
                    Product nonFragProd = (nonFragile) prod;
                    prodListModel.addElement(nonFragProd.productID);
                }
            }
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuEditProductActionPerformed

    private void menuEditOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditOrderActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlEditOrder");
        txtOrderItemQuan.setText(Integer.toString(0));
        DefaultTableModel orderItemListModel = (DefaultTableModel) tblOrderItemList.getModel();
        
        // Get grand total for pending order
        Order order = new Order(admin.genOrderID(), orderItemList);
        lblEditOrderGrandTotal.setText(String.format("RM%.2f",order.getGrandTotal()));
        
        // clear order list table
        int rowsToRemove = orderItemListModel.getRowCount();
        //remove rows from the bottom one by one
        for (int i = rowsToRemove - 1; i >= 0; i--)
        {
            orderItemListModel.removeRow(i);
        }
        
        Object[] rowOrderItem = new Object[5];
        
        for (OrderItem orderItem:orderItemList)
        {
            rowOrderItem[0] = orderItem.getProductName();
            rowOrderItem[1] = orderItem.getBuyQuan();
            rowOrderItem[2] = orderItem.getProductPrice();
            rowOrderItem[3] = orderItem.getShippingFee();
            rowOrderItem[4] = orderItem.calcSubtotal();
            orderItemListModel.addRow(rowOrderItem);
            
        }
    }//GEN-LAST:event_menuEditOrderActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlSearch");
        txtSearchBar.setEditable(false);
        lblSelectSearchWarning.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // Get user input from text fields
        String name =  txtAddCusName.getText();
        String usr =  txtAddCusUsrname.getText();
        String pwd =  String.valueOf(txtAddCusPwd.getPassword());
        String cpwd =  String.valueOf(txtAddCusConfirmPw.getPassword());
        String email =  txtAddCusEmail.getText();
        String phone =  txtAddCusPhone.getText();
        String address =  txtAddCusAddress.getText();
        String usrType = null;
        
        //checks if an user type is selected
        if ((rbUsrAdm.isSelected() == false)&&(rbUsrCus.isSelected() == false))
        {
            JOptionPane.showMessageDialog(errorMessage, "Please choose a user type to add.","No user type is selected.",JOptionPane.INFORMATION_MESSAGE);
        }
        else //a user type is selected, a userType is set
        {
            if (rbUsrAdm.isSelected())
            {
                usrType = "ADM";
            }
            else if (rbUsrCus.isSelected())
            {
                usrType = "CUS";
            }

            if(cpwd.equals(pwd)) //if passwords entered are same, calls the addUser static method
            {
                Admin adm = new Admin();
                adm.addUser(usr, pwd, name, email, phone, address, usrType);
            }
            else
            {
                JOptionPane.showMessageDialog(errorMessage, " Password entered is different. Please try again","Different password entered.",JOptionPane.WARNING_MESSAGE);
            } 
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void menuViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewOrderActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlViewOrderSummary");
        // Show list of order IDs
        orderIDListModel.removeAllElements();
        try
        {
            ArrayList<Order> orderList = new ArrayList(admin.viewOrder(admin.getUID()));
            lstOrder.setModel(orderIDListModel);
            
            for (Object orders: orderList)
            {
                Order odr = (Order) orders;
                orderIDListModel.addElement(odr.getOrderID());
            }
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuViewOrderActionPerformed

    private void menuBrowseProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBrowseProductActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlBrowseProduct");
        prodNameListModel.removeAllElements();
        Customer cus = new Customer();
        ArrayList<Product> prodList = new ArrayList(cus.browseProd());
        lstBrowseProduct.setModel(prodNameListModel);
        for (Product prod:prodList)
        {
            if (prod.getClass() == Fragile.class)
            {
                Product fragProd = (Fragile) prod;
                prodNameListModel.addElement(fragProd.getProductName());
            }
            else if (prod.getClass() == nonFragile.class)
            {
                Product nonFragProd = (nonFragile) prod;
                prodNameListModel.addElement(nonFragProd.getProductName());
            }
        }
    }//GEN-LAST:event_menuBrowseProductActionPerformed

    private void menuEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditProfileActionPerformed
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlViewProfile");
    }//GEN-LAST:event_menuEditProfileActionPerformed

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
       if ((rbBeans.isSelected() == false)&&(rbEquipments.isSelected() == false))
        {
            JOptionPane.showMessageDialog(errorMessage, "Please choose a product type to add.","No product type is selected.",JOptionPane.INFORMATION_MESSAGE);
        }
       
       // try catch block to convert textfield to integer data type
       try
       {
           Integer.parseInt(txtAddProdQuantity.getText());
       }
       catch(NumberFormatException e)
       {
           JOptionPane.showMessageDialog(errorMessage, "Non integer value inserted for quantity. Please retry.","Wrong data type inserted",JOptionPane.INFORMATION_MESSAGE);
           txtAddProdQuantity.setText("");
       }
       
       // try catch block to convert textfield to double data type
       try 
       {
            Double.parseDouble(txtAddProdPrice.getText());
            Double.parseDouble(txtAddProdWeight.getText());
            Double.parseDouble(txtAddProdParam2.getText());
       }
       catch(NumberFormatException e)
       {
            JOptionPane.showMessageDialog(errorMessage, "Non positive numerical value inserted for weight/price/altitude. Please retry","Wrong data type inserted",JOptionPane.INFORMATION_MESSAGE);
            txtAddProdPrice.setText("");
       }
       
       //prevent execution of new product entry if empty fields are detected
       if (txtAddProdQuantity.getText().equals("") || txtAddProdPrice.getText().equals("") || txtAddProdName.getText().equals("")||txtAddProdParam1.getText().equals(""))
       {
             JOptionPane.showMessageDialog(errorMessage, "Required fields are not filled. Please retry","Unfilled required fields.",JOptionPane.INFORMATION_MESSAGE);
       }
       else
       {
           String prodName = txtAddProdName.getText();
           int quan = Integer.parseInt(txtAddProdQuantity.getText());
           double price = Double.parseDouble(txtAddProdPrice.getText());
           double weight = Double.parseDouble(txtAddProdWeight.getText());
           String param1 = txtAddProdParam1.getText();


            if(rbBeans.isSelected())
            {
               
                String mode = "beans";
                Double param2 =Double.parseDouble(txtAddProdParam2.getText());
                String param3 =txtAddProdParam3.getText();
                
                Admin.addProduct(prodName, quan, price,weight, param1, param2,param3, mode);
                
            }
            else if (rbEquipments.isSelected())
            {
                String mode = "equipment";
                
                Admin.addProduct(prodName, quan, price,weight, param1, 0,"null", mode);
            }
       }


    }//GEN-LAST:event_btnAddProductActionPerformed

    private void rbBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBeansActionPerformed
        // TODO add your handling code here:
        if (rbBeans.isSelected())
        {
            lblAddProdParam1.setVisible(true);
            lblAddProdParam2.setVisible(true);
            lblAddProdParam3.setVisible(true);
            
            lblAddProdParam1.setText("Origin:");
            lblAddProdParam2.setText("Altitude (ft):");
            lblAddProdParam3.setText("Tasting Notes:");
            
            txtAddProdParam1.setVisible(true);
            txtAddProdParam2.setVisible(true);
            txtAddProdParam3.setVisible(true);
        }    
        
    }//GEN-LAST:event_rbBeansActionPerformed

    private void rbEquipmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEquipmentsActionPerformed
        if (rbEquipments.isSelected())
        {
            lblAddProdParam2.setVisible(false);
            lblAddProdParam3.setVisible(false);
            txtAddProdParam2.setVisible(false);
            txtAddProdParam3.setVisible(false);
            
            txtAddProdParam1.setVisible(true);
            lblAddProdParam1.setVisible(true);
            lblAddProdParam1.setText(" Brand:");
        }
    }//GEN-LAST:event_rbEquipmentsActionPerformed

    private void btnClearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFieldActionPerformed
        txtAddCusName.setText("");
        txtAddCusConfirmPw.setText("");
        txtAddCusAddress.setText("");
        txtAddCusUsrname.setText("");
        txtAddCusPwd.setText("");
        txtAddCusEmail.setText("");
        txtAddCusPhone.setText("");
    }//GEN-LAST:event_btnClearFieldActionPerformed

    private void lstCusNameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstCusNameMouseReleased
        try
        {
            Admin adm = new Admin();
            ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
            i = lstCusName.getSelectedIndex();
            txtCusName.setText(cusList.get(i).getName());
            txtCusUsername.setText(cusList.get(i).getUsername());
            txtCusEmail.setText(cusList.get(i).getEmailAddress());
            txtCusAddress.setText(cusList.get(i).getAddress());
            txtCusPhoneNo.setText(cusList.get(i).getPhoneNumber());
            txtCusPassword.setText("");
            txtCusPassword2.setText("");
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
       
        if (lstCusName.getSelectedValue().contains("ADM"))
        {
            btnEdit.setVisible(false);
            btnBack.setVisible(false);
            btnDeleteCus.setVisible(false);
            txtCusName.setEditable(false);
            txtCusUsername.setEditable(false);
            txtCusEmail.setEditable(false);
            txtCusAddress.setEditable(false);
            txtCusPassword.setEditable(false);
            txtCusPassword2.setEditable(false);
            JOptionPane.showMessageDialog(errorMessage, "Admin Information cannot be altered by another admin. If you want to change your profile, head to the 'Profile' section.","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            btnEdit.setText("Edit");
            btnEdit.setVisible(true);
            btnBack.setVisible(false);
            btnDeleteCus.setVisible(true);
            txtCusName.setEditable(false);
            txtCusUsername.setEditable(false);
            txtCusEmail.setEditable(false);
            txtCusAddress.setEditable(false);
            txtCusPassword.setEditable(false);
            txtCusPassword2.setEditable(false);
        }
    }//GEN-LAST:event_lstCusNameMouseReleased

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (btnEdit.getText() == "Confirm")
        {
            btnBack.setVisible(false);
            txtCusName.setEditable(false);
            txtCusUsername.setEditable(false);
            txtCusEmail.setEditable(false);
            txtCusAddress.setEditable(false);
            txtCusPassword.setEditable(false);
            txtCusPassword2.setEditable(false);
            btnEdit.setText("Edit");
            
            //customer edit logic
            if (Arrays.equals(txtCusPassword.getPassword(), txtCusPassword2.getPassword()) == false)
            {
                JOptionPane.showMessageDialog(errorMessage, " Password entered is different. Please try again","Different password entered.",JOptionPane.WARNING_MESSAGE);
            }
            else if("".equals(txtCusName.getText()) || "".equals(txtCusEmail.getText()) || "".equals(txtCusAddress.getText()) || "".equals(txtCusPhoneNo.getText()))
            {
                JOptionPane.showMessageDialog(errorMessage, "Kindly select a user ID.","UserID not selected.",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                try
                {
                    Admin adm = new Admin();
                    ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
                    if((cusList.get(i).getName().equals(txtCusName.getText()) &&  cusList.get(i).getEmailAddress().equals(txtCusEmail.getText()) &&
                            cusList.get(i).getAddress().equals(txtCusAddress.getText()) && cusList.get(i).getPhoneNumber().equals(txtCusPhoneNo.getText()))&&
                            cusList.get(i).getPassword().equals(String.valueOf(txtCusPassword.getPassword())))
                    {
                        JOptionPane.showMessageDialog(errorMessage, "No changes detected. Please retry.","No fields are changed.",JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                        cusList.get(i).setName(txtCusName.getText());
                        cusList.get(i).setEmailAddress(txtCusEmail.getText());
                        cusList.get(i).setAddress(txtCusAddress.getText());
                        cusList.get(i).setPhoneNumber(txtCusPhoneNo.getText());
                        if (txtCusPassword.getPassword().length > 0)
                        {
                            cusList.get(i).setPassword(String.valueOf(txtCusPassword.getPassword()));
                        }
                        adm.editCustomer(cusList);
                    }
                }
                catch (IOException Ex)
                {
                    JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            try
            {
                Admin adm = new Admin();
                ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
                txtCusName.setText(cusList.get(i).getName());
                txtCusUsername.setText(cusList.get(i).getUsername());
                txtCusEmail.setText(cusList.get(i).getEmailAddress());
                txtCusAddress.setText(cusList.get(i).getAddress());
                txtCusPassword.setText("");
                txtCusPassword2.setText("");
            }
            catch(IOException Ex)
            {
                JOptionPane.showMessageDialog(errorMessage, "No customer is selected. Please select a customer ID","No customer is selected",JOptionPane.ERROR_MESSAGE);
            }
        }
        else if (btnEdit.getText() == "Edit")
        {
            btnBack.setVisible(true);
            txtCusName.setEditable(true);
            txtCusEmail.setEditable(true);
            txtCusAddress.setEditable(true);
            txtCusPassword.setEditable(true);
            txtCusPassword2.setEditable(true);
            btnEdit.setText("Confirm");
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        btnBack.setVisible(false);
        txtCusName.setEditable(false);
        txtCusUsername.setEditable(false);
        txtCusEmail.setEditable(false);
        txtCusAddress.setEditable(false);
        txtCusPassword.setEditable(false);
        txtCusPassword2.setEditable(false);
        btnEdit.setText("Edit");
        btnReset.doClick();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCusActionPerformed
        try
        {
            //fetches customer details
            Admin adm = new Admin();
            ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
            i = lstCusName.getSelectedIndex();
            
            
            //removes customer details based on selected index on jList
            if(JOptionPane.showConfirmDialog(errorMessage,"Are you sure you want to delete this user?", "Delete user confirmation.",
               JOptionPane.YES_NO_OPTION,
               JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
            {
                cusList.remove(i);
                adm.editCustomer(cusList);
                menuViewCustomer.doClick();
            } 
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "User deletion error. Please try again.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteCusActionPerformed

    //Under viewCustomer panal
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        try
        {
            Admin adm = new Admin();
            ArrayList<Customer> cusList = new ArrayList<Customer>(adm.viewCustomer());
            txtCusName.setText(cusList.get(i).getName());
            txtCusUsername.setText(cusList.get(i).getUsername());
            txtCusEmail.setText(cusList.get(i).getEmailAddress());
            txtCusAddress.setText(cusList.get(i).getAddress());
            txtCusPassword.setText("");
            txtCusPassword2.setText("");
        }
        catch(IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void lstProductIDMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProductIDMouseReleased
        btnEditProd.setEnabled(true);
        txtProdQuan.setText(Integer.toString(0));
        btnEditProd.setText("Edit");
        btnEditProdAddQuan.setEnabled(false);
        btnEditProdDecQuan.setEnabled(false);
        txtProdWeight.setEditable(false);
        txtProdPrice.setEditable(false);
        try
        {
            Admin adm = new Admin();
            ArrayList<Object> prodList = new ArrayList(adm.viewProduct());

            //for loop to enable object typecasting
            for (Object prod:prodList)
            {
                if (prod instanceof Fragile)
                {
                    //typeccasting each Object into a fragile object
                    Fragile fragProd = (Fragile) prod;
                    if (lstProductID.getSelectedValue().equals(fragProd.getProductID()))
                    {
                        txtProdName.setText(fragProd.getProductName());
                        txtProdWeight.setText(String.valueOf(fragProd.getProductWeight()));
                        txtProdPrice.setText(String.valueOf(fragProd.getProductPrice()));
                        txtProdParam1.setText(fragProd.getBrand());
                        lblCurrentQuan.setText(String.valueOf(fragProd.getProdQuantity()));
                        
                        lblParam1.setText("Brand:");
                        lblParam2.setVisible(false);
                        lblParam3.setVisible(false);
                        txtProdParam2.setVisible(false);
                        txtProdParam3.setVisible(false);
                    }
                }
                else
                {
                    //typeccasting each Object into a nonFragile object
                    nonFragile nonFragProd = (nonFragile) prod;
                    if (lstProductID.getSelectedValue().equals(nonFragProd.getProductID()))
                    {
                        txtProdName.setText(nonFragProd.getProductName());
                        txtProdWeight.setText(String.valueOf(nonFragProd.getProductWeight()));
                        txtProdPrice.setText(String.valueOf(nonFragProd.getProductPrice()));
                        txtProdParam1.setText(nonFragProd.getOrigin());
                        txtProdParam2.setText(String.valueOf(nonFragProd.getAltitude()));
                        txtProdParam3.setText(nonFragProd.getTasteNotes());
                        lblCurrentQuan.setText(String.valueOf(nonFragProd.getProdQuantity()));
                        
                        lblParam1.setText("Origin:");
                        lblParam2.setVisible(true);
                        lblParam3.setVisible(true);
                        txtProdParam2.setVisible(true);
                        txtProdParam3.setVisible(true);
                    }

                }
            }
        }
        catch (IOException Ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lstProductIDMouseReleased

    private void btnEditProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProdActionPerformed
        if (btnEditProd.getText() == "Confirm")
        {
            btnEditProdBack.setVisible(false);
            txtProdName.setEditable(false);
            txtProdWeight.setEditable(false);
            txtProdPrice.setEditable(false);
            txtProdQuan.setEditable(false);
            txtCusPassword.setEditable(false);
            txtCusPassword2.setEditable(false);
            btnEditProd.setText("Edit");
            
            //edit product logic here
            try
            {
                Admin adm = new Admin();
                ArrayList<Object> prodList = new ArrayList(adm.viewProduct());
                
                for (Object prod:prodList)     
                {

                    if (prod instanceof Fragile)
                    {
                        Fragile fragProd = (Fragile) prod;
                        if(lstProductID.getSelectedValue().equals(fragProd.getProductID()))
                        {
                            try
                            {
                                if(txtProdQuan.getText().trim().length()!=0)
                                {
                                    int quan = Integer.parseInt(txtProdQuan.getText().trim());
                                    int subtotal = quan + Integer.parseInt(lblCurrentQuan.getText().trim());
                                    fragProd.setProdQuantity(subtotal);
                                }
                                if(fragProd.getProductWeight() != Double.parseDouble(txtProdWeight.getText().trim()))
                                {
                                    fragProd.setProductWeight(Double.parseDouble(txtProdWeight.getText().trim()));
                                }
                                if(fragProd.getProductPrice() != Double.parseDouble(txtProdPrice.getText().trim()))
                                {
                                    fragProd.setProductPrice(Double.parseDouble(txtProdPrice.getText().trim()));
                                }
                            }
                            catch (NumberFormatException e){} // allow exception to happen due to no change of quantity
                        }
                    }
                    else
                    {
                        nonFragile nonFragProd = (nonFragile) prod;
                        if (lstProductID.getSelectedValue().equals(nonFragProd.getProductID()))
                        {
                            try
                            {
                                if(txtProdQuan.getText().trim().length()!=0)
                                {
                                    int quan = Integer.parseInt(txtProdQuan.getText().trim());
                                    int subtotal = quan + Integer.parseInt(lblCurrentQuan.getText().trim());
                                    nonFragProd.setProdQuantity(subtotal);
                                }
                                if(nonFragProd.getProductWeight() != Double.parseDouble(txtProdWeight.getText().trim()))
                                {
                                    nonFragProd.setProductWeight(Double.parseDouble(txtProdWeight.getText().trim()));
                                }
                                if(nonFragProd.getProductPrice() != Double.parseDouble(txtProdPrice.getText().trim()))
                                {
                                    nonFragProd.setProductPrice(Double.parseDouble(txtProdPrice.getText().trim()));
                                }
                            }
                            catch (NumberFormatException e){} // allow exception to happen due to no change of quantity
                        }
                    }
                }
                adm.editProduct(prodList);
                menuEditProduct.doClick();
            }
            catch (IOException ex)
            {
                JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else if (btnEditProd.getText() == "Edit")
        {
            btnEditProdAddQuan.setEnabled(true);
            btnEditProdDecQuan.setEnabled(true);
            btnEditProdBack.setVisible(true);
            txtProdName.setEditable(false);
            txtProdWeight.setEditable(true);
            txtProdPrice.setEditable(true);
            txtProdQuan.setEditable(false);
            btnEditProd.setText("Confirm");
            try
            {
                Admin adm = new Admin();
                ArrayList<Object> prodList = new ArrayList(adm.viewProduct());
                for (Object prod:prodList)
                {
                    if (prod instanceof Fragile)
                    {
                        Fragile fragProd = (Fragile) prod;
                        if(lstProductID.getSelectedValue().equals(fragProd.getProductID()))
                        {
                            lblParam2.setVisible(false);
                            lblParam3.setVisible(false);
                            txtProdParam2.setVisible(false);
                            txtProdParam3.setVisible(false);
                        } 
                    }
                    else
                    {
                        nonFragile nonFragProd = (nonFragile) prod;
                        if (lstProductID.getSelectedValue().equals(nonFragProd.getProductID()))
                        {
                            lblParam2.setVisible(true);
                            lblParam3.setVisible(true);
                            txtProdParam2.setVisible(true);
                            txtProdParam3.setVisible(true);
                        }
                    }
                }
            }
            catch (IOException ex)
            {
                JOptionPane.showMessageDialog(errorMessage, "An Error Occured. Please try again. Possible error:[Invalid tampering of file]","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEditProdActionPerformed

    private void lstBrowseProductMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBrowseProductMouseReleased
        CardLayout card = (CardLayout)mainAdminMain.getLayout();
        card.show(mainAdminMain, "pnlAddOrderItem");
        Customer cus = new Customer();
        ArrayList<Object> prodList = new ArrayList(cus.browseProd());
        txtOrderItemQuan.setVisible(true);
        txtOrderItemQuan.setText("1");
        btnDecreaseQuan.setVisible(true);
        btnAddQuan.setVisible(true);
        btnAddOrderItem.setVisible(true);
        txtOrderItemQuan.setEditable(false);
        //for loop to enable object typecasting
        for (Object prod:prodList)
        {
            if (prod instanceof Fragile)
            {
                //typeccasting each Object into a fragile object
                Fragile fragProd = (Fragile) prod;
                if (lstBrowseProduct.getSelectedValue().equals(fragProd.getProductName()))
                {
                    if (fragProd.getProdQuantity() == 0)
                    {
                        lblQuan.setText("Out of Stock!");
                        txtOrderItemQuan.setVisible(false);
                        btnDecreaseQuan.setVisible(false);
                        btnAddQuan.setVisible(false);
                        btnAddOrderItem.setVisible(false);
                    }
                    else
                    {
                        lblQuan.setText(String.valueOf(fragProd.getProdQuantity()));
                        if (!orderItemList.isEmpty())
                        {
                            for (OrderItem orderItem : orderItemList)
                            {
                                if (orderItem.getProductName().equals(lstBrowseProduct.getSelectedValue()))
                                {
                                    lblQuan.setText(String.valueOf(fragProd.getProdQuantity() - orderItem.getBuyQuan()));
                                }
                            }
                        }
                    }
                    lblProdName.setText(String.valueOf(fragProd.getProductName()));
                    lblProdID.setText(String.valueOf(fragProd.getProductID()));
                    lblProdPrice.setText(String.format("RM%.2f",fragProd.getProductPrice()));
                    lblWeight.setText(String.valueOf(fragProd.getProductWeight()));
                    lblProdType.setText("Equipment (Fragile item)");
                    lblParam1Header.setText("Brand:");
                    lblProdParam1.setText(String.valueOf(fragProd.getBrand()));
                    lblParam2Header.setVisible(false);
                    lblProdParam2.setVisible(false);
                    lblParam3Header.setVisible(false);
                    lblProdParam3.setVisible(false);
                }
            }
            else
            {
                //typeccasting each Object into a nonFragile object
                nonFragile nonFragProd = (nonFragile) prod;
                if (lstBrowseProduct.getSelectedValue().equals(nonFragProd.getProductName()))
                {
                    if (nonFragProd.getProdQuantity() == 0)
                    {
                        lblQuan.setText("Out of Stock!");
                        txtOrderItemQuan.setVisible(false);
                        btnDecreaseQuan.setVisible(false);
                        btnAddQuan.setVisible(false);
                        btnAddOrderItem.setVisible(false);
                    }
                    else
                    {
                        lblQuan.setText(String.valueOf(nonFragProd.getProdQuantity()));
                        if (!orderItemList.isEmpty())
                        {
                            for (OrderItem orderItem : orderItemList)
                            {
                                if (orderItem.getProductName().equals(lstBrowseProduct.getSelectedValue()))
                                {
                                    lblQuan.setText(String.valueOf(nonFragProd.getProdQuantity() - orderItem.getBuyQuan()));
                                }
                            }
                        }
                    }
                    lblParam2Header.setVisible(true);
                    lblProdParam2.setVisible(true);
                    lblParam3Header.setVisible(true);
                    lblProdParam3.setVisible(true);
                    lblProdName.setText(String.valueOf(nonFragProd.getProductName()));
                    lblProdName.setText(String.valueOf(nonFragProd.getProductName()));
                    lblProdID.setText(String.valueOf(nonFragProd.getProductID()));
                    lblProdPrice.setText(String.format("RM%.2f",nonFragProd.getProductPrice()));
                    lblWeight.setText(String.valueOf(nonFragProd.getProductWeight()));
                    lblProdType.setText("Coffee (Non-fragile item)");
                    lblParam1Header.setText("Origin:");
                    lblProdParam1.setText(String.valueOf(String.valueOf(nonFragProd.getOrigin())));
                    lblParam2Header.setText("Altitude:");
                    lblProdParam2.setText(String.valueOf(nonFragProd.getAltitude()));
                    lblParam3Header.setText("Tasting Notes:");
                    lblProdParam3.setText(String.valueOf(nonFragProd.getTasteNotes()));
                }
            }
        }
    }//GEN-LAST:event_lstBrowseProductMouseReleased

    private void btnBackBrowseProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackBrowseProductActionPerformed
        menuBrowseProduct.doClick();
    }//GEN-LAST:event_btnBackBrowseProductActionPerformed

    private void btnBrowseCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseCoffeeActionPerformed
        prodNameListModel.removeAllElements();
        Customer cus = new Customer();
        ArrayList<Product> prodList = new ArrayList(cus.browseProd());
        lstBrowseProduct.setModel(prodNameListModel);
        for (Product prod:prodList)
        {
            if (prod.getClass() == Fragile.class)
            {
                continue;
            }
            else if (prod.getClass() == nonFragile.class)
            {
                Product nonFragProd = (nonFragile) prod;
                prodNameListModel.addElement(nonFragProd.getProductName());
            }
        }
    }//GEN-LAST:event_btnBrowseCoffeeActionPerformed

    private void btnBrowseEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseEquipmentActionPerformed
        prodNameListModel.removeAllElements();
        Customer cus = new Customer();
        ArrayList<Product> prodList = new ArrayList(cus.browseProd());
        lstBrowseProduct.setModel(prodNameListModel);
        for (Product prod:prodList)
        {
            if (prod.getClass() == Fragile.class)
            {
                Product fragProd = (Fragile) prod;
                prodNameListModel.addElement(fragProd.getProductName());
            }
            else if (prod.getClass() == nonFragile.class)
            {
                continue;
            }
        }
    }//GEN-LAST:event_btnBrowseEquipmentActionPerformed

    private void btnAddOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderItemActionPerformed
        DefaultTableModel orderItemListModel = (DefaultTableModel) tblOrderItemList.getModel();
        int rowsToRemove = orderItemListModel.getRowCount();
        //remove rows from the bottom one by one
        for (int i = rowsToRemove - 1; i >= 0; i--)
        {
            orderItemListModel.removeRow(i);
        }
            
        
        Customer cus = new Customer();
        ArrayList<Object> prodList = new ArrayList(cus.browseProd());
        for (Object prod:prodList)
        {
            if (prod instanceof Fragile)
            {
                //typeccasting each Object into a fragile object
                Fragile fragProd = (Fragile) prod;
                if (lblProdID.getText().equals(fragProd.getProductID()))
                {
                    int buyQuan = Integer.parseInt(txtOrderItemQuan.getText());
                    
                    // append order item object into order item list
                    OrderItem orderItem = new OrderItem(fragProd.getProductID(), 
                            fragProd.getProductName(), 
                            buyQuan,
                            fragProd.getProductPrice(),
                            fragProd.calcShipping(buyQuan));
                    orderItemList.add(orderItem);
                    menuEditOrder.doClick();
                }
            }
            else
            {
                //typeccasting each Object into a non-fragile object
                nonFragile nonFragProd = (nonFragile) prod;
                if (lblProdID.getText().equals(nonFragProd.getProductID()))
                {
                    // CREATE CHECK INPUT QUANTITY VERSUS PRODUCT QUANTITY check input quantity versus product quantity
                    int buyQuan = Integer.parseInt(txtOrderItemQuan.getText());
                    
                    // append order item object into order item list
                    OrderItem orderItem = new OrderItem(nonFragProd.getProductID(), 
                            nonFragProd.getProductName(), 
                            buyQuan,
                            nonFragProd.getProductPrice(),
                            nonFragProd.calcShipping(buyQuan));
                    orderItemList.add(orderItem);
                    menuEditOrder.doClick();
                }
            }
         }
        // Remove redundant order items in arraylist
        int count = 0;
        OrderItem dupItem = null;
        for (int i = 0; i < orderItemList.size(); i++)
        {
            if(orderItemList.get(i).getProductID().equals(lblProdID.getText()))
            {
                count = count + orderItemList.get(i).getBuyQuan();
                dupItem = orderItemList.get(i);
            }           
        }
        if (!dupItem.equals(null))
        {
            for (int i  = orderItemList.size() - 1; i >=0 ; i -- )
            {
                if (orderItemList.get(i).getProductID().equals(lblProdID.getText()))
                {
                    orderItemList.remove(i);
                }
            }
            OrderItem orderItem = new OrderItem(dupItem.getProductID(),
                        dupItem.getProductName(),
                        count,
                        dupItem.getProductPrice(),
                        dupItem.getShippingFee());
            
            orderItemList.add(orderItem);
        }
        menuEditOrder.doClick();
    }//GEN-LAST:event_btnAddOrderItemActionPerformed

    private void btnEditProdAddQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProdAddQuanActionPerformed
        if (Integer.parseInt(txtProdQuan.getText()) >= 0)
        {
            int y = Integer.parseInt(txtProdQuan.getText()) + 1;
            txtProdQuan.setText(Integer.toString(y));
            btnEditProdDecQuan.setEnabled(true);
        }
        else
        {
            btnEditProdAddQuan.setEnabled(false);
        }
    }//GEN-LAST:event_btnEditProdAddQuanActionPerformed

    private void btnEditProdDecQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProdDecQuanActionPerformed
        if (Integer.parseInt(txtProdQuan.getText()) > 0)
        {
            int y = Integer.parseInt(txtProdQuan.getText()) - 1;
            txtProdQuan.setText(Integer.toString(y));
            btnEditProdAddQuan.setEnabled(true);
        }
        else
        {
            btnEditProdDecQuan.setEnabled(false);
        }
    }//GEN-LAST:event_btnEditProdDecQuanActionPerformed

    private void btnAddQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQuanActionPerformed
        if(Integer.parseInt(txtOrderItemQuan.getText()) < Integer.parseInt(lblQuan.getText()))
        {
            int y = Integer.parseInt(txtOrderItemQuan.getText()) + 1;
            txtOrderItemQuan.setText(Integer.toString(y));
            btnDecreaseQuan.setEnabled(true);
        }
        else 
        {
            btnAddQuan.setEnabled(false);
        }
        
    }//GEN-LAST:event_btnAddQuanActionPerformed

    private void btnDecreaseQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecreaseQuanActionPerformed
        if(Integer.parseInt(txtOrderItemQuan.getText()) > 1)
        {
            int y = Integer.parseInt(txtOrderItemQuan.getText()) - 1;
            txtOrderItemQuan.setText(Integer.toString(y));
            btnAddQuan.setEnabled(true);
        } 
        else
        {
            btnDecreaseQuan.setEnabled(false);
        }
    }//GEN-LAST:event_btnDecreaseQuanActionPerformed

    private void btnDeleteOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderItemActionPerformed
        if(tblOrderItemList.getSelectedRow() >= 0)
        {
            String selectedItem = tblOrderItemList.getValueAt(tblOrderItemList.getSelectedRow(), 0).toString();
            for (OrderItem orderItem:orderItemList)
            {
                if (orderItem.getProductName() == selectedItem)
                {
                    orderItemList.remove(orderItem);
                    menuEditOrder.doClick();
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnDeleteOrderItemActionPerformed

    private void btnCreateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateOrderActionPerformed
        ArrayList<Object> manipulateProd = new ArrayList(admin.browseProd());
        for (Object prod:manipulateProd)
        {
            if (prod instanceof Fragile)
            {
                Fragile fragProd = (Fragile) prod;
                for (int i=0; i < tblOrderItemList.getRowCount(); i++)
                {
                    if (tblOrderItemList.getValueAt(i, 0).equals(fragProd.getProductName()))
                    {
                        fragProd.setProdQuantity(fragProd.getProdQuantity() - Integer.parseInt(tblOrderItemList.getValueAt(i, 1).toString()));
                    }
                }
            }
            else
            {
                nonFragile nonFragProd = (nonFragile) prod;
                for (int i=0; i < tblOrderItemList.getRowCount(); i++)
                {
                    if (tblOrderItemList.getValueAt(i, 0).equals(nonFragProd.getProductName()))
                    {
                        nonFragProd.setProdQuantity(nonFragProd.getProdQuantity() - Integer.parseInt(tblOrderItemList.getValueAt(i, 1).toString()));
                    }
                }
            }
        }
        
        Admin adm = new Admin();
        adm.editProduct(manipulateProd);
        String newOrderID = admin.genOrderID();
        Order order = new Order(newOrderID,orderItemList);
        admin.addOrder(order);
        orderItemList.clear();
        menuViewOrder.doClick();
    }//GEN-LAST:event_btnCreateOrderActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        loginMenu newLogin = new loginMenu();
        newLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void lstOrderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstOrderMouseReleased
        DefaultTableModel orderOrderItemListModel = (DefaultTableModel) tblOrderOrderItems.getModel();
        
        // clear order list table
        int rowsToRemove = orderOrderItemListModel.getRowCount();
        //remove rows from the bottom one by one
        for (int i = rowsToRemove - 1; i >= 0; i--)
        {
            orderOrderItemListModel.removeRow(i);
        }
        
        try
        {
            ArrayList<Order> orderList = new ArrayList(admin.viewOrder(admin.getUID()));
            
            for (Order odr: orderList)
            {
                Object[] rowOrderItem = new Object[5];
                if (lstOrder.getSelectedValue().equals(odr.getOrderID()))
                {
                    for (Object orderItems: odr.getOrderItem())
                    {
                        OrderItem odrItems = (OrderItem) orderItems;
                        rowOrderItem[0] = odrItems.getProductName();
                        rowOrderItem[1] = odrItems.getBuyQuan();
                        rowOrderItem[2] = odrItems.getProductPrice();
                        rowOrderItem[3] = odrItems.getShippingFee();
                        rowOrderItem[4] = odrItems.calcSubtotal();
                        orderOrderItemListModel.addRow(rowOrderItem);
                    }
                    // Get grand total for selected order
                    lblViewOrderGrandTotal.setText(String.format("RM%.2f",odr.getGrandTotal()));
                }
            }
            
        }
        catch (IOException Ex)
        {

        }
    }//GEN-LAST:event_lstOrderMouseReleased

    private void btnSearchEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchEnterActionPerformed
        lstSearchResult.setModel(searchListModel);
        searchListModel.clear();
        try
        {
            if (lblSearchElement.getText() == "Customer")
            {
                ArrayList<Customer> returnedList = new ArrayList(admin.search(admin.getUID(),String.valueOf(txtSearchBar.getText()),lblSearchElement.getText()));
                for(Customer cus: returnedList)
                {
                    searchListModel.addElement(cus.getUID() + ", " + cus.getName());
                }
            }
            else if (lblSearchElement.getText() == "Product")
            {
                ArrayList<Product> returnedList = new ArrayList(admin.search(admin.getUID(),String.valueOf(txtSearchBar.getText()),lblSearchElement.getText()));
                for (Product prod: returnedList)
                {
                    searchListModel.addElement(prod.getProductID() + ", " + prod.getProductName());
                }
            }
            else if (lblSearchElement.getText() == "Order")
            {
                ArrayList<Order> returnedList = new ArrayList(admin.search(admin.getUID(),String.valueOf(txtSearchBar.getText()),lblSearchElement.getText()));
                for (Order odr: returnedList)
                {
                    searchListModel.addElement(odr.getOrderID());
                }
            }
        }
        catch (IndexOutOfBoundsException ex)
        {
            JOptionPane.showMessageDialog(errorMessage, "No result found!","Result",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchEnterActionPerformed

    private void rbSearchCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchCusActionPerformed
        lblSearchElement.setText("Customer");
        searchListModel.clear();
        txtSearchBar.setEditable(true);
        lblSelectSearchWarning.setVisible(false);
    }//GEN-LAST:event_rbSearchCusActionPerformed

    private void rbSearchProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchProdActionPerformed
        lblSearchElement.setText("Product");
        searchListModel.clear();
        txtSearchBar.setEditable(true);
        lblSelectSearchWarning.setVisible(false);
    }//GEN-LAST:event_rbSearchProdActionPerformed

    private void rbSearchOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchOrderActionPerformed
        lblSearchElement.setText("Order");
        searchListModel.clear();
        txtSearchBar.setEditable(true);
        lblSelectSearchWarning.setVisible(false);
    }//GEN-LAST:event_rbSearchOrderActionPerformed

    private void btnDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderActionPerformed
        orderItemList.clear();
        menuEditOrder.doClick();
    }//GEN-LAST:event_btnDeleteOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrderItem;
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnAddQuan;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBackBrowseProduct;
    private javax.swing.JButton btnBrowseCoffee;
    private javax.swing.JButton btnBrowseEquipment;
    private javax.swing.JButton btnClearField;
    private javax.swing.JButton btnCreateOrder;
    private javax.swing.JButton btnDecreaseQuan;
    private javax.swing.JButton btnDeleteCus;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnDeleteOrderItem;
    private javax.swing.JButton btnDeleteProd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEditProd;
    private javax.swing.JButton btnEditProdAddQuan;
    private javax.swing.JButton btnEditProdBack;
    private javax.swing.JButton btnEditProdDecQuan;
    private javax.swing.JMenuItem btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset2;
    private javax.swing.JButton btnSearchEnter;
    private javax.swing.ButtonGroup buttonGroup1;
    private java.awt.Choice choice1;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenuHome;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel lblAddProdParam1;
    private javax.swing.JLabel lblAddProdParam2;
    private javax.swing.JLabel lblAddProdParam3;
    private javax.swing.JLabel lblCurrentQuan;
    private javax.swing.JLabel lblEditOrderGrandTotal;
    private javax.swing.JLabel lblParam1;
    private javax.swing.JLabel lblParam1Header;
    private javax.swing.JLabel lblParam2;
    private javax.swing.JLabel lblParam2Header;
    private javax.swing.JLabel lblParam3;
    private javax.swing.JLabel lblParam3Header;
    private javax.swing.JLabel lblProdID;
    private javax.swing.JLabel lblProdName;
    private javax.swing.JLabel lblProdParam1;
    private javax.swing.JLabel lblProdParam2;
    private javax.swing.JLabel lblProdParam3;
    private javax.swing.JLabel lblProdPrice;
    private javax.swing.JLabel lblProdType;
    private javax.swing.JLabel lblQuan;
    private javax.swing.JLabel lblSearchElement;
    private javax.swing.JLabel lblSelectSearchWarning;
    private javax.swing.JLabel lblViewOrderGrandTotal;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JList<String> lstBrowseProduct;
    private javax.swing.JList<String> lstCusName;
    private javax.swing.JList<String> lstOrder;
    private javax.swing.JList<String> lstProductID;
    private javax.swing.JList<String> lstSearchResult;
    private javax.swing.JPanel mainAdminMain;
    private javax.swing.JMenu menuAdd;
    private javax.swing.JMenuItem menuAddProduct;
    private javax.swing.JMenuItem menuAddUser;
    private javax.swing.JMenuItem menuBrowseProduct;
    private javax.swing.JMenu menuCus;
    private javax.swing.JMenuItem menuEditOrder;
    private javax.swing.JMenuItem menuEditProduct;
    private javax.swing.JMenuItem menuEditProfile;
    private javax.swing.JMenuItem menuHome;
    private javax.swing.JMenu menuOrder;
    private javax.swing.JMenu menuProd;
    private javax.swing.JMenu menuProfile;
    private javax.swing.JMenu menuSearch;
    private javax.swing.JMenuBar menuSearchMenu;
    private javax.swing.JMenu menuShop;
    private javax.swing.JMenuItem menuViewCustomer;
    private javax.swing.JMenuItem menuViewOrder;
    private javax.swing.JPanel pnlAddCustomer;
    private javax.swing.JPanel pnlAddOrderItem;
    private javax.swing.JPanel pnlAddProduct;
    private javax.swing.JPanel pnlAdminMenu;
    private javax.swing.JPanel pnlBrowseProduct;
    private javax.swing.JPanel pnlEditOrder;
    private javax.swing.JPanel pnlEditProduct;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlViewCustomer;
    private javax.swing.JPanel pnlViewOrderSummary;
    private javax.swing.JPanel pnlViewProfile;
    private javax.swing.JRadioButton rbBeans;
    private javax.swing.JRadioButton rbEquipments;
    private javax.swing.JRadioButton rbSearchCus;
    private javax.swing.JRadioButton rbSearchOrder;
    private javax.swing.JRadioButton rbSearchProd;
    private javax.swing.JRadioButton rbUsrAdm;
    private javax.swing.JRadioButton rbUsrCus;
    private javax.swing.JTable tblOrderItemList;
    private javax.swing.JTable tblOrderOrderItems;
    private javax.swing.JTextField txtAddCusAddress;
    private javax.swing.JPasswordField txtAddCusConfirmPw;
    private javax.swing.JTextField txtAddCusEmail;
    private javax.swing.JTextField txtAddCusName;
    private javax.swing.JTextField txtAddCusPhone;
    private javax.swing.JPasswordField txtAddCusPwd;
    private javax.swing.JTextField txtAddCusUsrname;
    private javax.swing.JTextField txtAddProdName;
    private javax.swing.JTextField txtAddProdParam1;
    private javax.swing.JTextField txtAddProdParam2;
    private javax.swing.JTextField txtAddProdParam3;
    private javax.swing.JTextField txtAddProdPrice;
    private javax.swing.JTextField txtAddProdQuantity;
    private javax.swing.JTextField txtAddProdWeight;
    private javax.swing.JTextArea txtCusAddress;
    private javax.swing.JTextField txtCusEmail;
    private javax.swing.JTextField txtCusName;
    private javax.swing.JPasswordField txtCusPassword;
    private javax.swing.JPasswordField txtCusPassword2;
    private javax.swing.JTextField txtCusPhoneNo;
    private javax.swing.JTextField txtCusUsername;
    private javax.swing.JTextField txtOrderItemQuan;
    private javax.swing.JTextField txtProdName;
    private javax.swing.JTextField txtProdParam1;
    private javax.swing.JTextField txtProdParam2;
    private javax.swing.JTextField txtProdParam3;
    private javax.swing.JTextField txtProdPrice;
    private javax.swing.JTextField txtProdQuan;
    private javax.swing.JTextField txtProdWeight;
    private javax.swing.JTextField txtSearchBar;
    // End of variables declaration//GEN-END:variables
}
